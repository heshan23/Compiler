declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@hs_new_global_str_0 = dso_local constant [3 x i8] c", \00"
define dso_local i32 @fib(i32 %0) {
1:
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* %2
	%4 = icmp eq i32 %3, 1
	br i1 %4, label %5, label %6
5:
	ret i32 1
6:
	%7 = load i32, i32* %2
	%8 = icmp eq i32 %7, 2
	br i1 %8, label %9, label %10
9:
	ret i32 2
10:
	%11 = load i32, i32* %2
	%12 = sub i32 %11, 1
	%13 = call i32 @fib(i32 %12) 
	%14 = load i32, i32* %2
	%15 = sub i32 %14, 2
	%16 = call i32 @fib(i32 %15) 
	%17 = add i32 %13, %16
	ret i32 %17
}
define dso_local i32 @main() {
0:
	%1 = alloca i32
	store i32 2, i32* %1
	%2 = alloca i32
	store i32 5, i32* %2
	%3 = call i32 @getint() 
	store i32 %3, i32* %1
	%4 = call i32 @getint() 
	store i32 %4, i32* %2
	%5 = alloca [2 x i32]
	%6 = getelementptr [2 x i32], [2 x i32]* %5, i32 0, i32 0
	store i32 1, i32* %6
	%7 = getelementptr [2 x i32], [2 x i32]* %5, i32 0, i32 1
	store i32 2, i32* %7
	%8 = load i32, i32* %1
	%9 = load i32, i32* %2
	%10 = mul i32 %8, %9
	%11 = sub i32 0, %10
	%12 = call i32 @fib(i32 4) 
	%13 = mul i32 %11, %12
	%14 = add i32 %13, 0
	%15 = call i32 @fib(i32 1) 
	%16 = getelementptr [2 x i32], [2 x i32]* %5, i32 0, i32 %15
	%17 = load i32, i32* %16
	%18 = mul i32 %17, 1
	%19 = add i32 %14, %18
	%20 = sdiv i32 1, 2
	%21 = sub i32 %19, %20
	%22 = mul i32 %21, 5
	store i32 %22, i32* %1
	%23 = mul i32 7, 5923
	%24 = sdiv i32 %23, 56
	%25 = mul i32 %24, 56
	%26 = call i32 @fib(i32 6) 
	%27 = call i32 @fib(i32 %26) 
	%28 = sub i32 %25, %27
	%29 = add i32 1, 2
	%30 = sdiv i32 89, 2
	%31 = mul i32 %30, 36
	%32 = sub i32 %31, 53
	%33 = sdiv i32 %32, 1
	%34 = mul i32 %33, 6
	%35 = sub i32 %29, %34
	%36 = mul i32 45, 56
	%37 = sdiv i32 %36, 85
	%38 = sub i32 %37, 56
	%39 = mul i32 35, 56
	%40 = sdiv i32 %39, 4
	%41 = add i32 %38, %40
	%42 = sub i32 %41, 9
	%43 = mul i32 2, %42
	%44 = sub i32 %35, %43
	%45 = add i32 %28, %44
	store i32 %45, i32* %2
	%46 = sub i32 0, 5
	%47 = alloca i32
	store i32 %46, i32* %47
	%48 = load i32, i32* %1
	call void @putint(i32 %48)
	%49 = getelementptr inbounds [3 x i8], [3 x i8]* @hs_new_global_str_0, i32 0, i32 0
	call void @putstr(i8* %49)
	%50 = load i32, i32* %2
	call void @putint(i32 %50)
	%51 = getelementptr inbounds [3 x i8], [3 x i8]* @hs_new_global_str_0, i32 0, i32 0
	call void @putstr(i8* %51)
	%52 = load i32, i32* %47
	call void @putint(i32 %52)
	call void @putch(i32 10)
	ret i32 0
}
