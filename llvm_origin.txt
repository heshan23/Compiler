declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@N = dso_local constant i32 10
@a = dso_local global [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9]
@hs_new_global_str_0 = dso_local constant [3 x i8] c", \00"
define dso_local i32 @fib(i32 %0) {
1:
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* %2
	%4 = icmp eq i32 %3, 1
	br i1 %4, label %5, label %6
5:
	ret i32 1
6:
	%7 = load i32, i32* %2
	%8 = icmp eq i32 %7, 2
	br i1 %8, label %9, label %10
9:
	ret i32 2
10:
	%11 = load i32, i32* %2
	%12 = sub i32 %11, 1
	%13 = call i32 @fib(i32 %12) 
	%14 = load i32, i32* %2
	%15 = sub i32 %14, 2
	%16 = call i32 @fib(i32 %15) 
	%17 = add i32 %13, %16
	ret i32 %17
}
define dso_local i32 @main() {
0:
	%1 = alloca i32
	store i32 2, i32* %1
	%2 = alloca i32
	store i32 5, i32* %2
	%3 = alloca i32
	store i32 1, i32* %3
	%4 = alloca i32
	store i32 2, i32* %4
	%5 = call i32 @getint() 
	store i32 %5, i32* %1
	%6 = call i32 @getint() 
	store i32 %6, i32* %2
	%7 = load i32, i32* %1
	%8 = load i32, i32* %2
	%9 = mul i32 %7, %8
	%10 = sub i32 0, %9
	%11 = call i32 @fib(i32 4) 
	%12 = mul i32 %10, %11
	%13 = add i32 %12, 0
	%14 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%15 = load i32, i32* %14
	%16 = mul i32 %15, 1
	%17 = add i32 %13, %16
	%18 = sdiv i32 1, 2
	%19 = sub i32 %17, %18
	%20 = mul i32 %19, 5
	store i32 %20, i32* %1
	%21 = mul i32 7, 5923
	%22 = srem i32 %21, 56
	%23 = mul i32 %22, 57
	%24 = call i32 @fib(i32 5) 
	%25 = add i32 %24, 2
	%26 = call i32 @fib(i32 %25) 
	%27 = sub i32 %23, %26
	%28 = load i32, i32* %3
	%29 = load i32, i32* %4
	%30 = add i32 %28, %29
	%31 = sdiv i32 89, 2
	%32 = mul i32 %31, 36
	%33 = sub i32 %32, 53
	%34 = sdiv i32 %33, 1
	%35 = mul i32 %34, 6
	%36 = sub i32 %30, %35
	%37 = mul i32 45, 56
	%38 = sdiv i32 %37, 85
	%39 = sub i32 %38, 56
	%40 = mul i32 35, 56
	%41 = sdiv i32 %40, 4
	%42 = add i32 %39, %41
	%43 = sub i32 %42, 9
	%44 = mul i32 2, %43
	%45 = sub i32 %36, %44
	%46 = add i32 %27, %45
	store i32 %46, i32* %2
	%47 = sub i32 0, 6
	%48 = alloca i32
	store i32 %47, i32* %48
	br label %49
49:
	%50 = load i32, i32* %1
	%51 = icmp slt i32 %50, 100
	br i1 %51, label %52, label %126
52:
	%53 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
	%54 = load i32, i32* %53
	%55 = load i32, i32* %48
	%56 = load i32, i32* %48
	%57 = mul i32 %55, %56
	%58 = add i32 %54, %57
	%59 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
	store i32 %58, i32* %59
	%60 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	%61 = load i32, i32* %60
	%62 = load i32, i32* %48
	%63 = load i32, i32* %48
	%64 = mul i32 %62, %63
	%65 = add i32 %61, %64
	%66 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
	store i32 %65, i32* %66
	%67 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
	%68 = load i32, i32* %67
	%69 = load i32, i32* %48
	%70 = load i32, i32* %48
	%71 = mul i32 %69, %70
	%72 = add i32 %68, %71
	%73 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
	store i32 %72, i32* %73
	%74 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
	%75 = load i32, i32* %74
	%76 = load i32, i32* %48
	%77 = load i32, i32* %48
	%78 = mul i32 %76, %77
	%79 = add i32 %75, %78
	%80 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
	store i32 %79, i32* %80
	%81 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
	%82 = load i32, i32* %81
	%83 = load i32, i32* %48
	%84 = load i32, i32* %48
	%85 = mul i32 %83, %84
	%86 = add i32 %82, %85
	%87 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
	store i32 %86, i32* %87
	%88 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
	%89 = load i32, i32* %88
	%90 = load i32, i32* %48
	%91 = load i32, i32* %48
	%92 = mul i32 %90, %91
	%93 = add i32 %89, %92
	%94 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
	store i32 %93, i32* %94
	%95 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
	%96 = load i32, i32* %95
	%97 = load i32, i32* %48
	%98 = load i32, i32* %48
	%99 = mul i32 %97, %98
	%100 = add i32 %96, %99
	%101 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
	store i32 %100, i32* %101
	%102 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
	%103 = load i32, i32* %102
	%104 = load i32, i32* %48
	%105 = load i32, i32* %48
	%106 = mul i32 %104, %105
	%107 = add i32 %103, %106
	%108 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
	store i32 %107, i32* %108
	%109 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
	%110 = load i32, i32* %109
	%111 = load i32, i32* %48
	%112 = load i32, i32* %48
	%113 = mul i32 %111, %112
	%114 = add i32 %110, %113
	%115 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
	store i32 %114, i32* %115
	%116 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
	%117 = load i32, i32* %116
	%118 = load i32, i32* %48
	%119 = load i32, i32* %48
	%120 = mul i32 %118, %119
	%121 = add i32 %117, %120
	%122 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
	store i32 %121, i32* %122
	br label %123
123:
	%124 = load i32, i32* %1
	%125 = add i32 %124, 1
	store i32 %125, i32* %1
	br label %49
126:
	store i32 0, i32* %1
	br label %127
127:
	%128 = load i32, i32* %1
	%129 = icmp slt i32 %128, 10
	br i1 %129, label %130, label %138
130:
	%131 = load i32, i32* %1
	%132 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %131
	%133 = load i32, i32* %132
	call void @putint(i32 %133)
	%134 = getelementptr inbounds [3 x i8], [3 x i8]* @hs_new_global_str_0, i32 0, i32 0
	call void @putstr(i8* %134)
	%135 = load i32, i32* %1
	%136 = add i32 %135, 1
	store i32 %136, i32* %1
	br label %137
137:
	br label %127
138:
	call void @putch(i32 10)
	%139 = load i32, i32* %1
	call void @putint(i32 %139)
	%140 = getelementptr inbounds [3 x i8], [3 x i8]* @hs_new_global_str_0, i32 0, i32 0
	call void @putstr(i8* %140)
	%141 = load i32, i32* %2
	call void @putint(i32 %141)
	%142 = getelementptr inbounds [3 x i8], [3 x i8]* @hs_new_global_str_0, i32 0, i32 0
	call void @putstr(i8* %142)
	%143 = load i32, i32* %48
	call void @putint(i32 %143)
	call void @putch(i32 10)
	ret i32 0
}
