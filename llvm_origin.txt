declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@a = dso_local global [510 x i32] zeroinitializer
@prime = dso_local global [510 x i32] zeroinitializer
@reflect1 = dso_local constant [16 x i32] [i32 -711942876, i32 -1060809599, i32 1758839997, i32 423174272, i32 1412407466, i32 375872692, i32 1543568839, i32 915987033, i32 698198080, i32 -2143283456, i32 2059223660, i32 -34179219, i32 378910912, i32 1498631475, i32 -1853883889, i32 1640319187]
@reflect2 = dso_local constant [5 x [5 x i32]] [[5 x i32] [i32 -1152785601, i32 1891446969, i32 938484211, i32 -1596516698, i32 1681072330], [5 x i32] [i32 128222498, i32 1090169129, i32 -347746822, i32 -326257601, i32 -1366930863], [5 x i32] [i32 -823961496, i32 2103453081, i32 -402114823, i32 2139806715, i32 -732814375], [5 x i32] [i32 1302967469, i32 1623817872, i32 898372270, i32 -812618050, i32 -1403178881], [5 x i32] [i32 -1776328495, i32 958769364, i32 47496017, i32 -1384738865, i32 1751940200]]
define dso_local i32 @main() {
0:
	%1 = alloca i32
	store i32 2, i32* %1
	%2 = alloca i32
	%3 = call i32 @getint() 
	store i32 %3, i32* %2
	br label %4
4:
	%5 = load i32, i32* %1
	%6 = load i32, i32* %2
	%7 = icmp slt i32 %5, %6
	br i1 %7, label %8, label %14
8:
	%9 = load i32, i32* %1
	%10 = getelementptr [510 x i32], [510 x i32]* @a, i32 0, i32 %9
	store i32 1, i32* %10
	%11 = load i32, i32* %1
	%12 = add i32 %11, 1
	store i32 %12, i32* %1
	br label %13
13:
	br label %4
14:
	store i32 2, i32* %1
	%15 = alloca i32
	store i32 0, i32* %15
	br label %16
16:
	%17 = load i32, i32* %1
	%18 = load i32, i32* %2
	%19 = icmp slt i32 %17, %18
	br i1 %19, label %20, label %67
20:
	%21 = load i32, i32* %1
	%22 = getelementptr [510 x i32], [510 x i32]* @a, i32 0, i32 %21
	%23 = load i32, i32* %22
	%24 = icmp ne i32 %23, 0
	br i1 %24, label %25, label %31
25:
	%26 = load i32, i32* %1
	%27 = load i32, i32* %15
	%28 = getelementptr [510 x i32], [510 x i32]* @prime, i32 0, i32 %27
	store i32 %26, i32* %28
	%29 = load i32, i32* %15
	%30 = add i32 %29, 1
	store i32 %30, i32* %15
	br label %31
31:
	%32 = alloca i32
	store i32 0, i32* %32
	br label %33
33:
	%34 = load i32, i32* %32
	%35 = load i32, i32* %15
	%36 = icmp slt i32 %34, %35
	br i1 %36, label %37, label %63
37:
	%38 = load i32, i32* %1
	%39 = load i32, i32* %32
	%40 = getelementptr [510 x i32], [510 x i32]* @prime, i32 0, i32 %39
	%41 = load i32, i32* %40
	%42 = mul i32 %38, %41
	%43 = load i32, i32* %2
	%44 = icmp sle i32 %42, %43
	br i1 %44, label %45, label %63
45:
	%46 = load i32, i32* %1
	%47 = load i32, i32* %32
	%48 = getelementptr [510 x i32], [510 x i32]* @prime, i32 0, i32 %47
	%49 = load i32, i32* %48
	%50 = mul i32 %46, %49
	%51 = getelementptr [510 x i32], [510 x i32]* @a, i32 0, i32 %50
	store i32 0, i32* %51
	%52 = load i32, i32* %1
	%53 = load i32, i32* %32
	%54 = getelementptr [510 x i32], [510 x i32]* @prime, i32 0, i32 %53
	%55 = load i32, i32* %54
	%56 = srem i32 %52, %55
	%57 = icmp eq i32 %56, 0
	br i1 %57, label %58, label %59
58:
	br label %63
59:
	%60 = load i32, i32* %32
	%61 = add i32 %60, 1
	store i32 %61, i32* %32
	br label %62
62:
	br label %33
63:
	%64 = load i32, i32* %1
	%65 = add i32 %64, 1
	store i32 %65, i32* %1
	br label %66
66:
	br label %16
67:
	store i32 0, i32* %1
	br label %68
68:
	%69 = icmp ne i32 114514, 0
	br i1 %69, label %70, label %105
70:
	%71 = load i32, i32* %1
	%72 = getelementptr [510 x i32], [510 x i32]* @a, i32 0, i32 %71
	%73 = load i32, i32* %72
	%74 = icmp ne i32 %73, 0
	br i1 %74, label %75, label %95
75:
	%76 = load i32, i32* %1
	call void @putint(i32 %76)
	call void @putch(i32 32)
	%77 = load i32, i32* %1
	%78 = srem i32 %77, 2
	%79 = load i32, i32* %1
	%80 = srem i32 %79, 16
	%81 = getelementptr [16 x i32], [16 x i32]* @reflect1, i32 0, i32 %80
	%82 = load i32, i32* %81
	%83 = mul i32 %78, %82
	%84 = load i32, i32* %1
	%85 = add i32 %84, 1
	%86 = srem i32 %85, 2
	%87 = load i32, i32* %1
	%88 = srem i32 %87, 5
	%89 = load i32, i32* %1
	%90 = srem i32 %89, 5
	%91 = getelementptr [5 x [5 x i32]], [5 x [5 x i32]]* @reflect2, i32 0, i32 %88, i32 %90
	%92 = load i32, i32* %91
	%93 = mul i32 %86, %92
	%94 = add i32 %83, %93
	call void @putint(i32 %94)
	call void @putch(i32 10)
	br label %95
95:
	%96 = load i32, i32* %1
	%97 = add i32 %96, 1
	store i32 %97, i32* %1
	%98 = load i32, i32* %1
	%99 = load i32, i32* %2
	%100 = icmp slt i32 %98, %99
	br i1 %100, label %101, label %102
101:
	br label %104
102:
	br label %105
103:
	br label %104
104:
	br label %68
105:
	ret i32 0
}
