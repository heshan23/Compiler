.macro getInt
li $v0, 5
syscall
.end_macro
.macro putInt
li $v0, 1
syscall
.end_macro
.macro putCh
li $v0, 11
syscall
.end_macro
.macro putStr
li $v0, 4
syscall
.end_macro
.data
N: .word 10
a: .word 0,1,2,3,4,5,6,7,8,9,
hs_new_global_str_0: .asciiz ", "
.text
jal main
li $v0, 10
syscall
fib:
fib_1:
#%2 = icmp eq i32 %0, 1
li $k1, 1
seq $t0, $a1, $k1
#br i1 %2, label %3, label %4
blez $t0, fib_4
fib_3:
#ret i32 1
li $v0, 1
jr $ra
fib_4:
#%5 = icmp eq i32 %0, 2
li $k0, 2
seq $t0, $a1, $k0
#br i1 %5, label %6, label %7
blez $t0, fib_7
fib_6:
#ret i32 2
li $v0, 2
jr $ra
fib_7:
#%8 = sub i32 %0, 1
li $k1, 1
subu $t0, $a1, $k1
#%9 = call i32 @fib(i32 %8) 
sw $ra, 0($sp)
sw $a1, -4($sp)
sw $t0, -8($sp)
sw $t1, -12($sp)
move $a1, $t0
addiu $sp, $sp, -20
jal fib
addiu $sp, $sp, 20
lw $ra, 0($sp)
lw $a1, -4($sp)
lw $t0, -8($sp)
lw $t1, -12($sp)
move $t0, $v0
#%10 = sub i32 %0, 2
li $k0, 2
subu $t1, $a1, $k0
#%11 = call i32 @fib(i32 %10) 
sw $ra, 0($sp)
sw $a1, -4($sp)
sw $t0, -8($sp)
sw $t1, -12($sp)
move $a1, $t1
addiu $sp, $sp, -20
jal fib
addiu $sp, $sp, 20
lw $ra, 0($sp)
lw $a1, -4($sp)
lw $t0, -8($sp)
lw $t1, -12($sp)
move $t1, $v0
#%12 = add i32 %9, %11
addu $t0, $t0, $t1
#ret i32 %12
move $v0, $t0
jr $ra
main:
main_0:
#%1 = call i32 @getint() 
getInt
move $t0, $v0
#%2 = call i32 @getint() 
getInt
move $t1, $v0
#%3 = mul i32 %1, %2
mult $t0, $t1
mflo $t0
#%4 = sub i32 0, %3
li $k1, 0
subu $t0, $k1, $t0
#%5 = call i32 @fib(i32 4) 
sw $ra, 0($sp)
sw $t4, -4($sp)
sw $t2, -8($sp)
sw $t1, -12($sp)
sw $t0, -16($sp)
sw $t5, -20($sp)
sw $t3, -24($sp)
li $a1, 4
addiu $sp, $sp, -32
jal fib
addiu $sp, $sp, 32
lw $ra, 0($sp)
lw $t4, -4($sp)
lw $t2, -8($sp)
lw $t1, -12($sp)
lw $t0, -16($sp)
lw $t5, -20($sp)
lw $t3, -24($sp)
move $t1, $v0
#%6 = mul i32 %4, %5
mult $t0, $t1
mflo $t0
#%7 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 1
la $v1, a
addiu $v1, $v1, 4
move $t1, $v1
#%8 = load i32, i32* %7
lw $k0, 0($t1)
move $t2, $k0
#%9 = add i32 %6, %8
addu $t0, $t0, $t2
#%10 = mul i32 %9, 5
sll $k0, $t0, 2
addu $t0, $k0, $t0
#%11 = call i32 @fib(i32 5) 
sw $ra, 0($sp)
sw $t4, -4($sp)
sw $t2, -8($sp)
sw $t1, -12($sp)
sw $t0, -16($sp)
sw $t5, -20($sp)
sw $t3, -24($sp)
li $a1, 5
addiu $sp, $sp, -32
jal fib
addiu $sp, $sp, 32
lw $ra, 0($sp)
lw $t4, -4($sp)
lw $t2, -8($sp)
lw $t1, -12($sp)
lw $t0, -16($sp)
lw $t5, -20($sp)
lw $t3, -24($sp)
move $t2, $v0
#%12 = add i32 %11, 2
li $k1, 2
addu $t2, $t2, $k1
#%13 = call i32 @fib(i32 %12) 
sw $ra, 0($sp)
sw $t4, -4($sp)
sw $t2, -8($sp)
sw $t1, -12($sp)
sw $t0, -16($sp)
sw $t5, -20($sp)
sw $t3, -24($sp)
move $a1, $t2
addiu $sp, $sp, -32
jal fib
addiu $sp, $sp, 32
lw $ra, 0($sp)
lw $t4, -4($sp)
lw $t2, -8($sp)
lw $t1, -12($sp)
lw $t0, -16($sp)
lw $t5, -20($sp)
lw $t3, -24($sp)
move $t2, $v0
#%14 = sub i32 1197, %13
li $k0, 1197
subu $t2, $k0, $t2
#%15 = add i32 %14, -10091
li $k1, -10091
addu $t2, $t2, $k1
#move %17 <- %10
move $t3, $t0
#br label %16
main_16:
#%18 = icmp slt i32 %17, 100
li $k0, 100
slt $t4, $t3, $k0
#br i1 %18, label %19, label %51
blez $t4, main_51
main_19:
#%20 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 0
la $v1, a
move $t4, $v1
#%21 = load i32, i32* %20
lw $k1, 0($t4)
move $t5, $k1
#%22 = add i32 %21, 36
li $k0, 36
addu $t5, $t5, $k0
#store i32 %22, i32* %20
sw $t5, 0($t4)
#%23 = load i32, i32* %7
lw $k1, 0($t1)
move $t4, $k1
#%24 = add i32 %23, 36
li $k0, 36
addu $t4, $t4, $k0
#store i32 %24, i32* %7
sw $t4, 0($t1)
#%25 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 2
la $v1, a
addiu $v1, $v1, 8
move $t4, $v1
#%26 = load i32, i32* %25
lw $k1, 0($t4)
move $t5, $k1
#%27 = add i32 %26, 36
li $k0, 36
addu $t5, $t5, $k0
#store i32 %27, i32* %25
sw $t5, 0($t4)
#%28 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 3
la $v1, a
addiu $v1, $v1, 12
move $t4, $v1
#%29 = load i32, i32* %28
lw $k1, 0($t4)
move $t5, $k1
#%30 = add i32 %29, 36
li $k0, 36
addu $t5, $t5, $k0
#store i32 %30, i32* %28
sw $t5, 0($t4)
#%31 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 4
la $v1, a
addiu $v1, $v1, 16
move $t4, $v1
#%32 = load i32, i32* %31
lw $k1, 0($t4)
move $t5, $k1
#%33 = add i32 %32, 36
li $k0, 36
addu $t5, $t5, $k0
#store i32 %33, i32* %31
sw $t5, 0($t4)
#%34 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 5
la $v1, a
addiu $v1, $v1, 20
move $t4, $v1
#%35 = load i32, i32* %34
lw $k1, 0($t4)
move $t5, $k1
#%36 = add i32 %35, 36
li $k0, 36
addu $t5, $t5, $k0
#store i32 %36, i32* %34
sw $t5, 0($t4)
#%37 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 6
la $v1, a
addiu $v1, $v1, 24
move $t4, $v1
#%38 = load i32, i32* %37
lw $k1, 0($t4)
move $t5, $k1
#%39 = add i32 %38, 36
li $k0, 36
addu $t5, $t5, $k0
#store i32 %39, i32* %37
sw $t5, 0($t4)
#%40 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 7
la $v1, a
addiu $v1, $v1, 28
move $t4, $v1
#%41 = load i32, i32* %40
lw $k1, 0($t4)
move $t5, $k1
#%42 = add i32 %41, 36
li $k0, 36
addu $t5, $t5, $k0
#store i32 %42, i32* %40
sw $t5, 0($t4)
#%43 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 8
la $v1, a
addiu $v1, $v1, 32
move $t4, $v1
#%44 = load i32, i32* %43
lw $k1, 0($t4)
move $t5, $k1
#%45 = add i32 %44, 36
li $k0, 36
addu $t5, $t5, $k0
#store i32 %45, i32* %43
sw $t5, 0($t4)
#%46 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 9
la $v1, a
addiu $v1, $v1, 36
move $t4, $v1
#%47 = load i32, i32* %46
lw $k1, 0($t4)
move $t5, $k1
#%48 = add i32 %47, 36
li $k0, 36
addu $t5, $t5, $k0
#store i32 %48, i32* %46
sw $t5, 0($t4)
#br label %49
main_49:
#%50 = add i32 %17, 1
li $k1, 1
addu $t3, $t3, $k1
#move %17 <- %50
#br label %16
j main_16
main_51:
#move %53 <- 0
li $k0, 0
move $t0, $k0
#br label %52
main_52:
#%54 = icmp slt i32 %53, 10
li $k1, 10
slt $t1, $t0, $k1
#br i1 %54, label %55, label %61
blez $t1, main_61
main_55:
#%56 = getelementptr [10 x i32], [10 x i32]* @a, i32 0, i32 %53
la $v1, a
li $k0, 4
mult $k0, $t0
mflo $k0
addu $v1, $v1, $k0
move $t1, $v1
#%57 = load i32, i32* %56
lw $k1, 0($t1)
move $t1, $k1
#call void @putint(i32 %57)
move $a0, $t1
putInt
#%58 = getelementptr inbounds [3 x i8], [3 x i8]* @hs_new_global_str_0, i32 0, i32 0
#call void @putstr(i8* %58)
la $a0, hs_new_global_str_0
putStr
#%59 = add i32 %53, 1
li $k0, 1
addu $t0, $t0, $k0
#br label %60
main_60:
#move %53 <- %59
#br label %52
j main_52
main_61:
#call void @putch(i32 10)
li $a0, 10
putCh
#call void @putint(i32 %53)
move $a0, $t0
putInt
#%62 = getelementptr inbounds [3 x i8], [3 x i8]* @hs_new_global_str_0, i32 0, i32 0
#call void @putstr(i8* %62)
la $a0, hs_new_global_str_0
putStr
#call void @putint(i32 %15)
move $a0, $t2
putInt
#call void @putstr(i8* %62)
la $a0, hs_new_global_str_0
putStr
#call void @putint(i32 -6)
li $a0, -6
putInt
#call void @putch(i32 10)
li $a0, 10
putCh
#ret i32 0
li $v0, 0
jr $ra
