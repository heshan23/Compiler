.macro getInt
li $v0, 5
syscall
.end_macro
.macro putInt
li $v0, 1
syscall
.end_macro
.macro putCh
li $v0, 11
syscall
.end_macro
.macro putStr
li $v0, 4
syscall
.end_macro
.data
_1: .word 4
_3: .word 64
_____: .word -49331
_2: .word 24
_10: .word 1040
aaa: .word 10086,16,
A: .word 212132,76,308,26,57048,3194880,8792,-687331,908,1040,136,10104,
_3cg: .word 4491858
hdc33ec_dyu: .word -597
cdh3yi_23: .word 0
duhih2_23c: .word 1983
_23879: .word 2323,9254,0,-1269906,
dijhw: .space 24
cdwuh: .space 8
wuei: .word 0
_3u22: .word 287,-98662,287,0,
jdfo_: .word 0
.text
jal main
li $v0, 10
syscall
__my_Ha_s__h:
lw $t0, 8($sp)
sw $t0, 0($sp)
lw $t0, 4($sp)
sw $t0, -4($sp)
__my_Ha_s__h_2:
#%3 = alloca i32*
#store i32* %0, i32** %3
lw $t0, 0($sp)
sw $t0, -8($sp)
#%4 = alloca i32
#store i32 %1, i32* %4
lw $t0, -4($sp)
sw $t0, -12($sp)
#%5 = alloca i32
#%6 = alloca i32
#%7 = load i32, i32* %4
lw $t0, -12($sp)
sw $t0, -24($sp)
#store i32 %7, i32* %5
lw $t0, -24($sp)
sw $t0, -16($sp)
#store i32 0, i32* %6
li $t0, 0
sw $t0, -20($sp)
#br label %8
j __my_Ha_s__h_8
__my_Ha_s__h_8:
#%9 = load i32, i32* %6
lw $t0, -20($sp)
sw $t0, -28($sp)
#%10 = load i32, i32* %4
lw $t0, -12($sp)
sw $t0, -32($sp)
#%11 = icmp slt i32 %9, %10
lw $t1, -28($sp)
lw $t2, -32($sp)
slt $t0, $t1, $t2
sw $t0, -36($sp)
#br i1 %11, label %12, label %39
lw $t0, -36($sp)
bgtz $t0, __my_Ha_s__h_12
j __my_Ha_s__h_39
__my_Ha_s__h_12:
#%13 = load i32, i32* %5
lw $t0, -16($sp)
sw $t0, -40($sp)
#%14 = add i32 %13, 98326464
lw $t1, -40($sp)
li $t2, 98326464
add $t0, $t1, $t2
sw $t0, -44($sp)
#store i32 %14, i32* %5
lw $t0, -44($sp)
sw $t0, -16($sp)
#%15 = load i32, i32* %5
lw $t0, -16($sp)
sw $t0, -48($sp)
#%16 = mul i32 %15, 20373381
lw $t1, -48($sp)
li $t2, 20373381
mult $t1, $t2
mflo $t0
sw $t0, -52($sp)
#store i32 %16, i32* %5
lw $t0, -52($sp)
sw $t0, -16($sp)
#%17 = load i32, i32* %5
lw $t0, -16($sp)
sw $t0, -56($sp)
#%18 = add i32 %17, 23667832
lw $t1, -56($sp)
li $t2, 23667832
add $t0, $t1, $t2
sw $t0, -60($sp)
#store i32 %18, i32* %5
lw $t0, -60($sp)
sw $t0, -16($sp)
#%19 = load i32, i32* %5
lw $t0, -16($sp)
sw $t0, -64($sp)
#%20 = sdiv i32 %19, 133
lw $t1, -64($sp)
li $t2, 133
div $t1, $t2
mflo $t0
sw $t0, -68($sp)
#store i32 %20, i32* %5
lw $t0, -68($sp)
sw $t0, -16($sp)
#%21 = load i32, i32* %5
lw $t0, -16($sp)
sw $t0, -72($sp)
#%22 = add i32 %21, 1347887899
lw $t1, -72($sp)
li $t2, 1347887899
add $t0, $t1, $t2
sw $t0, -76($sp)
#store i32 %22, i32* %5
lw $t0, -76($sp)
sw $t0, -16($sp)
#%23 = load i32, i32* %5
lw $t0, -16($sp)
sw $t0, -80($sp)
#%24 = srem i32 %23, 99998099
lw $t1, -80($sp)
li $t2, 99998099
div $t1, $t2
mfhi $t0
sw $t0, -84($sp)
#store i32 %24, i32* %5
lw $t0, -84($sp)
sw $t0, -16($sp)
#%25 = load i32, i32* %5
lw $t0, -16($sp)
sw $t0, -88($sp)
#%26 = mul i32 %25, 123671861
lw $t1, -88($sp)
li $t2, 123671861
mult $t1, $t2
mflo $t0
sw $t0, -92($sp)
#%27 = sub i32 %26, 236234
lw $t1, -92($sp)
li $t2, 236234
sub $t0, $t1, $t2
sw $t0, -96($sp)
#%28 = load i32, i32* %5
lw $t0, -16($sp)
sw $t0, -100($sp)
#%29 = add i32 %28, 135632
lw $t1, -100($sp)
li $t2, 135632
add $t0, $t1, $t2
sw $t0, -104($sp)
#%30 = mul i32 %27, %29
lw $t1, -96($sp)
lw $t2, -104($sp)
mult $t1, $t2
mflo $t0
sw $t0, -108($sp)
#%31 = sdiv i32 %30, 7
lw $t1, -108($sp)
li $t2, 7
div $t1, $t2
mflo $t0
sw $t0, -112($sp)
#store i32 %31, i32* %5
lw $t0, -112($sp)
sw $t0, -16($sp)
#%32 = load i32, i32* %6
lw $t0, -20($sp)
sw $t0, -116($sp)
#%33 = sub i32 0, 0
li $t1, 0
li $t2, 0
sub $t0, $t1, $t2
sw $t0, -120($sp)
#%34 = add i32 %33, 2
lw $t1, -120($sp)
li $t2, 2
add $t0, $t1, $t2
sw $t0, -124($sp)
#%35 = sdiv i32 1234, 888
li $t1, 1234
li $t2, 888
div $t1, $t2
mflo $t0
sw $t0, -128($sp)
#%36 = sub i32 %34, %35
lw $t1, -124($sp)
lw $t2, -128($sp)
sub $t0, $t1, $t2
sw $t0, -132($sp)
#%37 = add i32 %32, %36
lw $t1, -116($sp)
lw $t2, -132($sp)
add $t0, $t1, $t2
sw $t0, -136($sp)
#store i32 %37, i32* %6
lw $t0, -136($sp)
sw $t0, -20($sp)
#br label %38
j __my_Ha_s__h_38
__my_Ha_s__h_38:
#br label %8
j __my_Ha_s__h_8
__my_Ha_s__h_39:
#%40 = load i32, i32* %5
lw $t0, -16($sp)
sw $t0, -140($sp)
#ret i32 %40
lw $v0, -140($sp)
jr $ra
___:
____0:
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 33)
li $a0, 33
putCh
#call void @putch(i32 33)
li $a0, 33
putCh
#call void @putch(i32 33)
li $a0, 33
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 40)
li $a0, 40
putCh
#call void @putch(i32 41)
li $a0, 41
putCh
#call void @putch(i32 42)
li $a0, 42
putCh
#call void @putch(i32 43)
li $a0, 43
putCh
#call void @putch(i32 44)
li $a0, 44
putCh
#call void @putch(i32 45)
li $a0, 45
putCh
#call void @putch(i32 46)
li $a0, 46
putCh
#call void @putch(i32 47)
li $a0, 47
putCh
#call void @putch(i32 58)
li $a0, 58
putCh
#call void @putch(i32 59)
li $a0, 59
putCh
#call void @putch(i32 60)
li $a0, 60
putCh
#call void @putch(i32 62)
li $a0, 62
putCh
#call void @putch(i32 61)
li $a0, 61
putCh
#call void @putch(i32 64)
li $a0, 64
putCh
#call void @putch(i32 63)
li $a0, 63
putCh
#call void @putch(i32 94)
li $a0, 94
putCh
#call void @putch(i32 95)
li $a0, 95
putCh
#call void @putch(i32 96)
li $a0, 96
putCh
#call void @putch(i32 123)
li $a0, 123
putCh
#call void @putch(i32 125)
li $a0, 125
putCh
#call void @putch(i32 124)
li $a0, 124
putCh
#call void @putch(i32 126)
li $a0, 126
putCh
#call void @putch(i32 91)
li $a0, 91
putCh
#call void @putch(i32 93)
li $a0, 93
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 99)
li $a0, 99
putCh
#call void @putch(i32 97)
li $a0, 97
putCh
#call void @putch(i32 108)
li $a0, 108
putCh
#call void @putch(i32 108)
li $a0, 108
putCh
#call void @putch(i32 101)
li $a0, 101
putCh
#call void @putch(i32 100)
li $a0, 100
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 102)
li $a0, 102
putCh
#call void @putch(i32 117)
li $a0, 117
putCh
#call void @putch(i32 110)
li $a0, 110
putCh
#call void @putch(i32 99)
li $a0, 99
putCh
#call void @putch(i32 58)
li $a0, 58
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 95)
li $a0, 95
putCh
#call void @putch(i32 95)
li $a0, 95
putCh
#call void @putch(i32 95)
li $a0, 95
putCh
#call void @putch(i32 10)
li $a0, 10
putCh
#ret void
jr $ra
____:
lw $t0, 4($sp)
sw $t0, -144($sp)
_____1:
#%2 = alloca i32
#store i32 %0, i32* %2
lw $t0, -144($sp)
sw $t0, -148($sp)
#call void @putch(i32 47)
li $a0, 47
putCh
#call void @putch(i32 47)
li $a0, 47
putCh
#call void @putch(i32 99)
li $a0, 99
putCh
#call void @putch(i32 97)
li $a0, 97
putCh
#call void @putch(i32 108)
li $a0, 108
putCh
#call void @putch(i32 108)
li $a0, 108
putCh
#call void @putch(i32 101)
li $a0, 101
putCh
#call void @putch(i32 100)
li $a0, 100
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 102)
li $a0, 102
putCh
#call void @putch(i32 117)
li $a0, 117
putCh
#call void @putch(i32 110)
li $a0, 110
putCh
#call void @putch(i32 99)
li $a0, 99
putCh
#call void @putch(i32 58)
li $a0, 58
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 95)
li $a0, 95
putCh
#call void @putch(i32 95)
li $a0, 95
putCh
#call void @putch(i32 95)
li $a0, 95
putCh
#call void @putch(i32 95)
li $a0, 95
putCh
#call void @putch(i32 44)
li $a0, 44
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 95)
li $a0, 95
putCh
#call void @putch(i32 97)
li $a0, 97
putCh
#call void @putch(i32 114)
li $a0, 114
putCh
#call void @putch(i32 103)
li $a0, 103
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 61)
li $a0, 61
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#%3 = load i32, i32* %2
lw $t0, -148($sp)
sw $t0, -152($sp)
#%4 = mul i32 %3, 2
lw $t1, -152($sp)
li $t2, 2
mult $t1, $t2
mflo $t0
sw $t0, -156($sp)
#%5 = mul i32 %4, 3
lw $t1, -156($sp)
li $t2, 3
mult $t1, $t2
mflo $t0
sw $t0, -160($sp)
#%6 = sdiv i32 %5, 6
lw $t1, -160($sp)
li $t2, 6
div $t1, $t2
mflo $t0
sw $t0, -164($sp)
#call void @putint(i32 %6)
lw $a0, -164($sp)
putInt
#call void @putch(i32 10)
li $a0, 10
putCh
#ret void
jr $ra
__:
lw $t0, 8($sp)
sw $t0, -168($sp)
lw $t0, 4($sp)
sw $t0, -172($sp)
___2:
#%3 = alloca i32*
#store i32* %0, i32** %3
lw $t0, -168($sp)
sw $t0, -176($sp)
#%4 = alloca i32
#store i32 %1, i32* %4
lw $t0, -172($sp)
sw $t0, -180($sp)
#call void @putch(i32 99)
li $a0, 99
putCh
#call void @putch(i32 97)
li $a0, 97
putCh
#call void @putch(i32 108)
li $a0, 108
putCh
#call void @putch(i32 108)
li $a0, 108
putCh
#call void @putch(i32 101)
li $a0, 101
putCh
#call void @putch(i32 100)
li $a0, 100
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 102)
li $a0, 102
putCh
#call void @putch(i32 117)
li $a0, 117
putCh
#call void @putch(i32 110)
li $a0, 110
putCh
#call void @putch(i32 99)
li $a0, 99
putCh
#call void @putch(i32 58)
li $a0, 58
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 95)
li $a0, 95
putCh
#call void @putch(i32 95)
li $a0, 95
putCh
#call void @putch(i32 44)
li $a0, 44
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 97)
li $a0, 97
putCh
#call void @putch(i32 114)
li $a0, 114
putCh
#call void @putch(i32 114)
li $a0, 114
putCh
#call void @putch(i32 97)
li $a0, 97
putCh
#call void @putch(i32 121)
li $a0, 121
putCh
#call void @putch(i32 91)
li $a0, 91
putCh
#call void @putch(i32 48)
li $a0, 48
putCh
#call void @putch(i32 93)
li $a0, 93
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 61)
li $a0, 61
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#%5 = load i32*, i32** %3
lw $t0, -176($sp)
sw $t0, -184($sp)
#%6 = getelementptr i32, i32* %5, i32 0
lw $t0, -184($sp)
addi $t0, $t0, 0
sw $t0, -188($sp)
#%7 = load i32, i32* %6
lw $t0, -188($sp)
lw $t0, 0($t0)
sw $t0, -192($sp)
#call void @putint(i32 %7)
lw $a0, -192($sp)
putInt
#call void @putch(i32 10)
li $a0, 10
putCh
#call void @putch(i32 10)
li $a0, 10
putCh
#call void @putch(i32 10)
li $a0, 10
putCh
#ret void
jr $ra
_Main:
lw $t0, 4($sp)
sw $t0, -196($sp)
_Main_1:
#%2 = alloca [2 x i32]*
addi $t0, $sp, -208
sw $t0, -200($sp)
#store [2 x i32]* %0, [2 x i32]** %2
lw $t0, -196($sp)
sw $t0, -200($sp)
#call void @putch(i32 99)
li $a0, 99
putCh
#call void @putch(i32 97)
li $a0, 97
putCh
#call void @putch(i32 108)
li $a0, 108
putCh
#call void @putch(i32 108)
li $a0, 108
putCh
#call void @putch(i32 101)
li $a0, 101
putCh
#call void @putch(i32 100)
li $a0, 100
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 102)
li $a0, 102
putCh
#call void @putch(i32 117)
li $a0, 117
putCh
#call void @putch(i32 110)
li $a0, 110
putCh
#call void @putch(i32 99)
li $a0, 99
putCh
#call void @putch(i32 58)
li $a0, 58
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 77)
li $a0, 77
putCh
#call void @putch(i32 97)
li $a0, 97
putCh
#call void @putch(i32 105)
li $a0, 105
putCh
#call void @putch(i32 110)
li $a0, 110
putCh
#call void @putch(i32 44)
li $a0, 44
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 97)
li $a0, 97
putCh
#call void @putch(i32 114)
li $a0, 114
putCh
#call void @putch(i32 114)
li $a0, 114
putCh
#call void @putch(i32 97)
li $a0, 97
putCh
#call void @putch(i32 121)
li $a0, 121
putCh
#call void @putch(i32 91)
li $a0, 91
putCh
#call void @putch(i32 48)
li $a0, 48
putCh
#call void @putch(i32 93)
li $a0, 93
putCh
#call void @putch(i32 91)
li $a0, 91
putCh
#call void @putch(i32 48)
li $a0, 48
putCh
#call void @putch(i32 93)
li $a0, 93
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 61)
li $a0, 61
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#%3 = load [2 x i32]*, [2 x i32]** %2
lw $t0, -200($sp)
sw $t0, -212($sp)
#%4 = getelementptr [2 x i32], [2 x i32]* %3, i32 0, i32 0
lw $t0, -212($sp)
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -216($sp)
#%5 = load i32, i32* %4
lw $t0, -216($sp)
lw $t0, 0($t0)
sw $t0, -220($sp)
#call void @putint(i32 %5)
lw $a0, -220($sp)
putInt
#call void @putch(i32 44)
li $a0, 44
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 97)
li $a0, 97
putCh
#call void @putch(i32 114)
li $a0, 114
putCh
#call void @putch(i32 114)
li $a0, 114
putCh
#call void @putch(i32 97)
li $a0, 97
putCh
#call void @putch(i32 121)
li $a0, 121
putCh
#call void @putch(i32 91)
li $a0, 91
putCh
#call void @putch(i32 48)
li $a0, 48
putCh
#call void @putch(i32 93)
li $a0, 93
putCh
#call void @putch(i32 91)
li $a0, 91
putCh
#call void @putch(i32 49)
li $a0, 49
putCh
#call void @putch(i32 93)
li $a0, 93
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putch(i32 61)
li $a0, 61
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#%6 = load [2 x i32]*, [2 x i32]** %2
lw $t0, -200($sp)
sw $t0, -224($sp)
#%7 = getelementptr [2 x i32], [2 x i32]* %6, i32 0, i32 1
lw $t0, -224($sp)
addi $t0, $t0, 0
addi $t0, $t0, 4
sw $t0, -228($sp)
#%8 = load i32, i32* %7
lw $t0, -228($sp)
lw $t0, 0($t0)
sw $t0, -232($sp)
#call void @putint(i32 %8)
lw $a0, -232($sp)
putInt
#call void @putch(i32 10)
li $a0, 10
putCh
#call void @putch(i32 10)
li $a0, 10
putCh
#ret void
jr $ra
_add_fake:
lw $t0, 8($sp)
sw $t0, -236($sp)
lw $t0, 4($sp)
sw $t0, -240($sp)
_add_fake_2:
#%3 = alloca i32
#store i32 %0, i32* %3
lw $t0, -236($sp)
sw $t0, -244($sp)
#%4 = alloca i32
#store i32 %1, i32* %4
lw $t0, -240($sp)
sw $t0, -248($sp)
#%5 = load i32, i32* %3
lw $t0, -244($sp)
sw $t0, -252($sp)
#%6 = load i32, i32* %4
lw $t0, -248($sp)
sw $t0, -256($sp)
#%7 = add i32 %5, %6
lw $t1, -252($sp)
lw $t2, -256($sp)
add $t0, $t1, $t2
sw $t0, -260($sp)
#%8 = add i32 100, 10086
li $t1, 100
li $t2, 10086
add $t0, $t1, $t2
sw $t0, -264($sp)
#%9 = icmp sge i32 %7, %8
lw $t1, -260($sp)
lw $t2, -264($sp)
sge $t0, $t1, $t2
sw $t0, -268($sp)
#br i1 %9, label %10, label %16
lw $t0, -268($sp)
bgtz $t0, _add_fake_10
j _add_fake_16
_add_fake_10:
#%11 = load i32, i32* %3
lw $t0, -244($sp)
sw $t0, -272($sp)
#%12 = load i32, i32* %4
lw $t0, -248($sp)
sw $t0, -276($sp)
#%13 = mul i32 203, %12
li $t1, 203
lw $t2, -276($sp)
mult $t1, $t2
mflo $t0
sw $t0, -280($sp)
#%14 = sdiv i32 %13, 201
lw $t1, -280($sp)
li $t2, 201
div $t1, $t2
mflo $t0
sw $t0, -284($sp)
#%15 = add i32 %11, %14
lw $t1, -272($sp)
lw $t2, -284($sp)
add $t0, $t1, $t2
sw $t0, -288($sp)
#ret i32 %15
lw $v0, -288($sp)
jr $ra
_add_fake_16:
#%17 = load i32, i32* %3
lw $t0, -244($sp)
sw $t0, -292($sp)
#%18 = load i32, i32* %4
lw $t0, -248($sp)
sw $t0, -296($sp)
#%19 = add i32 %17, %18
lw $t1, -292($sp)
lw $t2, -296($sp)
add $t0, $t1, $t2
sw $t0, -300($sp)
#%20 = sub i32 %19, 10086
lw $t1, -300($sp)
li $t2, 10086
sub $t0, $t1, $t2
sw $t0, -304($sp)
#%21 = icmp slt i32 %20, 12345678
lw $t1, -304($sp)
li $t2, 12345678
slt $t0, $t1, $t2
sw $t0, -308($sp)
#br i1 %21, label %22, label %30
lw $t0, -308($sp)
bgtz $t0, _add_fake_22
j _add_fake_30
_add_fake_22:
#%23 = load i32, i32* %3
lw $t0, -244($sp)
sw $t0, -312($sp)
#%24 = mul i32 1003, %23
li $t1, 1003
lw $t2, -312($sp)
mult $t1, $t2
mflo $t0
sw $t0, -316($sp)
#%25 = sdiv i32 %24, 1009
lw $t1, -316($sp)
li $t2, 1009
div $t1, $t2
mflo $t0
sw $t0, -320($sp)
#%26 = load i32, i32* %4
lw $t0, -248($sp)
sw $t0, -324($sp)
#%27 = mul i32 2022, %26
li $t1, 2022
lw $t2, -324($sp)
mult $t1, $t2
mflo $t0
sw $t0, -328($sp)
#%28 = sdiv i32 %27, 2019
lw $t1, -328($sp)
li $t2, 2019
div $t1, $t2
mflo $t0
sw $t0, -332($sp)
#%29 = add i32 %25, %28
lw $t1, -320($sp)
lw $t2, -332($sp)
add $t0, $t1, $t2
sw $t0, -336($sp)
#ret i32 %29
lw $v0, -336($sp)
jr $ra
_add_fake_30:
#%31 = load i32, i32* %3
lw $t0, -244($sp)
sw $t0, -340($sp)
#%32 = load i32, i32* %4
lw $t0, -248($sp)
sw $t0, -344($sp)
#%33 = add i32 %31, %32
lw $t1, -340($sp)
lw $t2, -344($sp)
add $t0, $t1, $t2
sw $t0, -348($sp)
#%34 = sub i32 %33, 233
lw $t1, -348($sp)
li $t2, 233
sub $t0, $t1, $t2
sw $t0, -352($sp)
#ret i32 %34
lw $v0, -352($sp)
jr $ra
_add_fake_35:
#br label %36
j _add_fake_36
_add_fake_36:
#%37 = sub i32 0, 10086
li $t1, 0
li $t2, 10086
sub $t0, $t1, $t2
sw $t0, -356($sp)
#ret i32 %37
lw $v0, -356($sp)
jr $ra
_add:
lw $t0, 12($sp)
sw $t0, -360($sp)
lw $t0, 8($sp)
sw $t0, -364($sp)
lw $t0, 4($sp)
sw $t0, -368($sp)
_add_3:
#%4 = alloca i32
#store i32 %0, i32* %4
lw $t0, -360($sp)
sw $t0, -372($sp)
#%5 = alloca i32
#store i32 %1, i32* %5
lw $t0, -364($sp)
sw $t0, -376($sp)
#%6 = alloca i32
#store i32 %2, i32* %6
lw $t0, -368($sp)
sw $t0, -380($sp)
#%7 = load i32, i32* %4
lw $t0, -372($sp)
sw $t0, -384($sp)
#%8 = load i32, i32* %5
lw $t0, -376($sp)
sw $t0, -388($sp)
#%9 = add i32 %7, %8
lw $t1, -384($sp)
lw $t2, -388($sp)
add $t0, $t1, $t2
sw $t0, -392($sp)
#%10 = load i32, i32* %6
lw $t0, -380($sp)
sw $t0, -396($sp)
#%11 = add i32 %9, %10
lw $t1, -392($sp)
lw $t2, -396($sp)
add $t0, $t1, $t2
sw $t0, -400($sp)
#ret i32 %11
lw $v0, -400($sp)
jr $ra
_get_id:
_get_id_0:
#%1 = alloca i32
#store i32 76, i32* %1
li $t0, 76
sw $t0, -404($sp)
#%2 = load i32, i32* %1
lw $t0, -404($sp)
sw $t0, -408($sp)
#call void @putint(i32 %2)
lw $a0, -408($sp)
putInt
#call void @putch(i32 10)
li $a0, 10
putCh
#store i32 10086, i32* %1
li $t0, 10086
sw $t0, -404($sp)
#%3 = load i32, i32* %1
lw $t0, -404($sp)
sw $t0, -412($sp)
#call void @putint(i32 %3)
lw $a0, -412($sp)
putInt
#call void @putch(i32 10)
li $a0, 10
putCh
#%4 = sub i32 0, 10
li $t1, 0
li $t2, 10
sub $t0, $t1, $t2
sw $t0, -416($sp)
#%5 = alloca i32
#store i32 %4, i32* %5
lw $t0, -416($sp)
sw $t0, -420($sp)
#%6 = load i32, i32* %5
lw $t0, -420($sp)
sw $t0, -424($sp)
#call void @putint(i32 %6)
lw $a0, -424($sp)
putInt
#call void @putch(i32 10)
li $a0, 10
putCh
#ret i32 20373381
li $v0, 20373381
jr $ra
_M__a_G_I___c:
lw $t0, 4($sp)
sw $t0, -428($sp)
_M__a_G_I___c_1:
#%2 = alloca i32
#store i32 %0, i32* %2
lw $t0, -428($sp)
sw $t0, -432($sp)
#%3 = load i32, i32* %2
lw $t0, -432($sp)
sw $t0, -436($sp)
#%4 = sub i32 0, 763835168
li $t1, 0
li $t2, 763835168
sub $t0, $t1, $t2
sw $t0, -440($sp)
#%5 = add i32 %3, %4
lw $t1, -436($sp)
lw $t2, -440($sp)
add $t0, $t1, $t2
sw $t0, -444($sp)
#%6 = srem i32 %5, 1996325548
lw $t1, -444($sp)
li $t2, 1996325548
div $t1, $t2
mfhi $t0
sw $t0, -448($sp)
#%7 = mul i32 %6, 1881457024
lw $t1, -448($sp)
li $t2, 1881457024
mult $t1, $t2
mflo $t0
sw $t0, -452($sp)
#%8 = sdiv i32 %7, 11
lw $t1, -452($sp)
li $t2, 11
div $t1, $t2
mflo $t0
sw $t0, -456($sp)
#%9 = mul i32 %8, 540488577
lw $t1, -456($sp)
li $t2, 540488577
mult $t1, $t2
mflo $t0
sw $t0, -460($sp)
#ret i32 %9
lw $v0, -460($sp)
jr $ra
main:
main_0:
#%1 = alloca i32
#%2 = alloca i32
#%3 = alloca i32
#%4 = alloca i32
#%5 = alloca i32
#%6 = alloca [2 x [4 x i32]]
addi $t0, $sp, -516
sw $t0, -484($sp)
#%7 = getelementptr [2 x [4 x i32]], [2 x [4 x i32]]* %6, i32 0, i32 0, i32 0
lw $t0, -484($sp)
addi $t0, $t0, 0
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -520($sp)
#store i32 1, i32* %7
li $t0, 1
lw $t1, -520($sp)
sw $t0, 0($t1)
#%8 = getelementptr [2 x [4 x i32]], [2 x [4 x i32]]* %6, i32 0, i32 0, i32 1
lw $t0, -484($sp)
addi $t0, $t0, 0
addi $t0, $t0, 0
addi $t0, $t0, 4
sw $t0, -524($sp)
#store i32 2, i32* %8
li $t0, 2
lw $t1, -524($sp)
sw $t0, 0($t1)
#%9 = getelementptr [2 x [4 x i32]], [2 x [4 x i32]]* %6, i32 0, i32 0, i32 2
lw $t0, -484($sp)
addi $t0, $t0, 0
addi $t0, $t0, 0
addi $t0, $t0, 8
sw $t0, -528($sp)
#store i32 3, i32* %9
li $t0, 3
lw $t1, -528($sp)
sw $t0, 0($t1)
#%10 = getelementptr [2 x [4 x i32]], [2 x [4 x i32]]* %6, i32 0, i32 0, i32 3
lw $t0, -484($sp)
addi $t0, $t0, 0
addi $t0, $t0, 0
addi $t0, $t0, 12
sw $t0, -532($sp)
#store i32 4, i32* %10
li $t0, 4
lw $t1, -532($sp)
sw $t0, 0($t1)
#%11 = getelementptr [2 x [4 x i32]], [2 x [4 x i32]]* %6, i32 0, i32 1, i32 0
lw $t0, -484($sp)
addi $t0, $t0, 0
addi $t0, $t0, 16
addi $t0, $t0, 0
sw $t0, -536($sp)
#store i32 5, i32* %11
li $t0, 5
lw $t1, -536($sp)
sw $t0, 0($t1)
#%12 = getelementptr [2 x [4 x i32]], [2 x [4 x i32]]* %6, i32 0, i32 1, i32 1
lw $t0, -484($sp)
addi $t0, $t0, 0
addi $t0, $t0, 16
addi $t0, $t0, 4
sw $t0, -540($sp)
#store i32 6, i32* %12
li $t0, 6
lw $t1, -540($sp)
sw $t0, 0($t1)
#%13 = getelementptr [2 x [4 x i32]], [2 x [4 x i32]]* %6, i32 0, i32 1, i32 2
lw $t0, -484($sp)
addi $t0, $t0, 0
addi $t0, $t0, 16
addi $t0, $t0, 8
sw $t0, -544($sp)
#store i32 7, i32* %13
li $t0, 7
lw $t1, -544($sp)
sw $t0, 0($t1)
#%14 = getelementptr [2 x [4 x i32]], [2 x [4 x i32]]* %6, i32 0, i32 1, i32 3
lw $t0, -484($sp)
addi $t0, $t0, 0
addi $t0, $t0, 16
addi $t0, $t0, 12
sw $t0, -548($sp)
#store i32 8, i32* %14
li $t0, 8
lw $t1, -548($sp)
sw $t0, 0($t1)
#%15 = alloca i32
#store i32 10, i32* %15
li $t0, 10
sw $t0, -552($sp)
#%16 = alloca i32
#store i32 20, i32* %16
li $t0, 20
sw $t0, -556($sp)
#%17 = alloca i32
#store i32 10, i32* %17
li $t0, 10
sw $t0, -560($sp)
#%18 = alloca i32
#store i32 0, i32* %18
li $t0, 0
sw $t0, -564($sp)
#%19 = alloca i32
#store i32 1, i32* %19
li $t0, 1
sw $t0, -568($sp)
#%20 = call i32 @getint() 
getInt
sw $v0, -572($sp)
#store i32 %20, i32* %1
lw $t0, -572($sp)
sw $t0, -464($sp)
#%21 = call i32 @getint() 
getInt
sw $v0, -576($sp)
#store i32 %21, i32* %2
lw $t0, -576($sp)
sw $t0, -468($sp)
#%22 = call i32 @getint() 
getInt
sw $v0, -580($sp)
#store i32 %22, i32* %3
lw $t0, -580($sp)
sw $t0, -472($sp)
#%23 = call i32 @getint() 
getInt
sw $v0, -584($sp)
#store i32 %23, i32* %4
lw $t0, -584($sp)
sw $t0, -476($sp)
#%24 = call i32 @getint() 
getInt
sw $v0, -588($sp)
#store i32 %24, i32* %5
lw $t0, -588($sp)
sw $t0, -480($sp)
#%25 = load i32, i32* %1
lw $t0, -464($sp)
sw $t0, -592($sp)
#%26 = icmp eq i32 %25, 20373381
lw $t1, -592($sp)
li $t2, 20373381
seq $t0, $t1, $t2
sw $t0, -596($sp)
#br i1 %26, label %27, label %32
lw $t0, -596($sp)
bgtz $t0, main_27
j main_32
main_27:
#%28 = load i32, i32* %19
lw $t0, -568($sp)
sw $t0, -600($sp)
#%29 = add i32 %28, 1
lw $t1, -600($sp)
li $t2, 1
add $t0, $t1, $t2
sw $t0, -604($sp)
#store i32 %29, i32* %19
lw $t0, -604($sp)
sw $t0, -568($sp)
#%30 = load i32, i32* %18
lw $t0, -564($sp)
sw $t0, -608($sp)
#%31 = add i32 %30, 1332
lw $t1, -608($sp)
li $t2, 1332
add $t0, $t1, $t2
sw $t0, -612($sp)
#store i32 %31, i32* %18
lw $t0, -612($sp)
sw $t0, -564($sp)
#br label %32
j main_32
main_32:
#%33 = load i32, i32* %2
lw $t0, -468($sp)
sw $t0, -616($sp)
#%34 = icmp sgt i32 %33, 200
lw $t1, -616($sp)
li $t2, 200
sgt $t0, $t1, $t2
sw $t0, -620($sp)
#br i1 %34, label %35, label %38
lw $t0, -620($sp)
bgtz $t0, main_35
j main_38
main_35:
#%36 = load i32, i32* %19
lw $t0, -568($sp)
sw $t0, -624($sp)
#%37 = add i32 %36, 1
lw $t1, -624($sp)
li $t2, 1
add $t0, $t1, $t2
sw $t0, -628($sp)
#store i32 %37, i32* %19
lw $t0, -628($sp)
sw $t0, -568($sp)
#br label %38
j main_38
main_38:
#%39 = load i32, i32* %3
lw $t0, -472($sp)
sw $t0, -632($sp)
#%40 = icmp sge i32 %39, 111
lw $t1, -632($sp)
li $t2, 111
sge $t0, $t1, $t2
sw $t0, -636($sp)
#br i1 %40, label %41, label %51
lw $t0, -636($sp)
bgtz $t0, main_41
j main_51
main_41:
#%42 = load i32, i32* %4
lw $t0, -476($sp)
sw $t0, -640($sp)
#%43 = icmp ne i32 %42, 2234
lw $t1, -640($sp)
li $t2, 2234
sne $t0, $t1, $t2
sw $t0, -644($sp)
#br i1 %43, label %44, label %47
lw $t0, -644($sp)
bgtz $t0, main_44
j main_47
main_44:
#%45 = load i32, i32* %19
lw $t0, -568($sp)
sw $t0, -648($sp)
#%46 = add i32 %45, 1
lw $t1, -648($sp)
li $t2, 1
add $t0, $t1, $t2
sw $t0, -652($sp)
#store i32 %46, i32* %19
lw $t0, -652($sp)
sw $t0, -568($sp)
#br label %50
j main_50
main_47:
#%48 = load i32, i32* %19
lw $t0, -568($sp)
sw $t0, -656($sp)
#%49 = add i32 %48, 2729
lw $t1, -656($sp)
li $t2, 2729
add $t0, $t1, $t2
sw $t0, -660($sp)
#store i32 %49, i32* %19
lw $t0, -660($sp)
sw $t0, -568($sp)
#br label %50
j main_50
main_50:
#br label %51
j main_51
main_51:
#%52 = alloca i32
#store i32 0, i32* %52
li $t0, 0
sw $t0, -664($sp)
#%53 = alloca i32
#store i32 0, i32* %53
li $t0, 0
sw $t0, -668($sp)
#br label %54
j main_54
main_54:
#%55 = icmp eq i32 0, 0
li $t1, 0
li $t2, 0
seq $t0, $t1, $t2
sw $t0, -672($sp)
#br i1 %55, label %56, label %71
lw $t0, -672($sp)
bgtz $t0, main_56
j main_71
main_56:
#%57 = load i32, i32* %53
lw $t0, -668($sp)
sw $t0, -676($sp)
#%58 = load i32, i32* %52
lw $t0, -664($sp)
sw $t0, -680($sp)
#%59 = getelementptr [2 x i32], [2 x i32]* @aaa, i32 0, i32 %58
la $t0, aaa
addi $t0, $t0, 0
li $t1, 4
lw $t2, -680($sp)
mult $t1, $t2
mflo $t1
add $t0, $t0, $t1
sw $t0, -684($sp)
#%60 = load i32, i32* %59
lw $t0, -684($sp)
lw $t0, 0($t0)
sw $t0, -688($sp)
#%61 = add i32 %57, %60
lw $t1, -676($sp)
lw $t2, -688($sp)
add $t0, $t1, $t2
sw $t0, -692($sp)
#store i32 %61, i32* %53
lw $t0, -692($sp)
sw $t0, -668($sp)
#%62 = load i32, i32* %52
lw $t0, -664($sp)
sw $t0, -696($sp)
#%63 = add i32 %62, 1
lw $t1, -696($sp)
li $t2, 1
add $t0, $t1, $t2
sw $t0, -700($sp)
#store i32 %63, i32* %52
lw $t0, -700($sp)
sw $t0, -664($sp)
#%64 = load i32, i32* %52
lw $t0, -664($sp)
sw $t0, -704($sp)
#%65 = load i32, i32* @_1
la $t0, _1
lw $t0, 0($t0)
sw $t0, -708($sp)
#%66 = sdiv i32 %65, 2
lw $t1, -708($sp)
li $t2, 2
div $t1, $t2
mflo $t0
sw $t0, -712($sp)
#%67 = icmp sge i32 %64, %66
lw $t1, -704($sp)
lw $t2, -712($sp)
sge $t0, $t1, $t2
sw $t0, -716($sp)
#br i1 %67, label %68, label %69
lw $t0, -716($sp)
bgtz $t0, main_68
j main_69
main_68:
#br label %71
j main_71
main_69:
#br label %70
j main_70
main_70:
#br label %54
j main_54
main_71:
#%72 = alloca i32
#store i32 0, i32* %72
li $t0, 0
sw $t0, -720($sp)
#%73 = alloca [12 x i32]
addi $t0, $sp, -772
sw $t0, -724($sp)
#br label %74
j main_74
main_74:
#%75 = icmp sle i32 1, 2
li $t1, 1
li $t2, 2
sle $t0, $t1, $t2
sw $t0, -776($sp)
#br i1 %75, label %76, label %102
lw $t0, -776($sp)
bgtz $t0, main_76
j main_102
main_76:
#%77 = load i32, i32* %72
lw $t0, -720($sp)
sw $t0, -780($sp)
#%78 = getelementptr [12 x i32], [12 x i32]* %73, i32 0, i32 %77
lw $t0, -724($sp)
addi $t0, $t0, 0
li $t1, 4
lw $t2, -780($sp)
mult $t1, $t2
mflo $t1
add $t0, $t0, $t1
sw $t0, -784($sp)
#store i32 0, i32* %78
li $t0, 0
lw $t1, -784($sp)
sw $t0, 0($t1)
#%79 = load i32, i32* %72
lw $t0, -720($sp)
sw $t0, -788($sp)
#%80 = icmp eq i32 %79, 5
lw $t1, -788($sp)
li $t2, 5
seq $t0, $t1, $t2
sw $t0, -792($sp)
#br i1 %80, label %81, label %84
lw $t0, -792($sp)
bgtz $t0, main_81
j main_84
main_81:
#%82 = load i32, i32* %72
lw $t0, -720($sp)
sw $t0, -796($sp)
#%83 = add i32 %82, 1
lw $t1, -796($sp)
li $t2, 1
add $t0, $t1, $t2
sw $t0, -800($sp)
#store i32 %83, i32* %72
lw $t0, -800($sp)
sw $t0, -720($sp)
#br label %101
j main_101
main_84:
#%85 = load i32, i32* %72
lw $t0, -720($sp)
sw $t0, -804($sp)
#%86 = icmp sgt i32 %85, 10
lw $t1, -804($sp)
li $t2, 10
sgt $t0, $t1, $t2
sw $t0, -808($sp)
#br i1 %86, label %87, label %88
lw $t0, -808($sp)
bgtz $t0, main_87
j main_88
main_87:
#br label %102
j main_102
main_88:
#%89 = load i32, i32* %72
lw $t0, -720($sp)
sw $t0, -812($sp)
#%90 = load i32, i32* %72
lw $t0, -720($sp)
sw $t0, -816($sp)
#%91 = getelementptr [12 x i32], [12 x i32]* %73, i32 0, i32 %90
lw $t0, -724($sp)
addi $t0, $t0, 0
li $t1, 4
lw $t2, -816($sp)
mult $t1, $t2
mflo $t1
add $t0, $t0, $t1
sw $t0, -820($sp)
#store i32 %89, i32* %91
lw $t0, -812($sp)
lw $t1, -820($sp)
sw $t0, 0($t1)
#%92 = load i32, i32* %72
lw $t0, -720($sp)
sw $t0, -824($sp)
#%93 = add i32 %92, 1
lw $t1, -824($sp)
li $t2, 1
add $t0, $t1, $t2
sw $t0, -828($sp)
#store i32 %93, i32* %72
lw $t0, -828($sp)
sw $t0, -720($sp)
#%94 = load i32, i32* %53
lw $t0, -668($sp)
sw $t0, -832($sp)
#%95 = load i32, i32* %72
lw $t0, -720($sp)
sw $t0, -836($sp)
#%96 = load i32, i32* %72
lw $t0, -720($sp)
sw $t0, -840($sp)
#%97 = mul i32 %95, %96
lw $t1, -836($sp)
lw $t2, -840($sp)
mult $t1, $t2
mflo $t0
sw $t0, -844($sp)
#%98 = add i32 %94, %97
lw $t1, -832($sp)
lw $t2, -844($sp)
add $t0, $t1, $t2
sw $t0, -848($sp)
#store i32 %98, i32* %53
lw $t0, -848($sp)
sw $t0, -668($sp)
#%99 = load i32, i32* %19
lw $t0, -568($sp)
sw $t0, -852($sp)
#%100 = add i32 %99, 1
lw $t1, -852($sp)
li $t2, 1
add $t0, $t1, $t2
sw $t0, -856($sp)
#store i32 %100, i32* %19
lw $t0, -856($sp)
sw $t0, -568($sp)
#br label %101
j main_101
main_101:
#br label %74
j main_74
main_102:
#%103 = alloca i32
#store i32 0, i32* %103
li $t0, 0
sw $t0, -860($sp)
#%104 = load i32, i32* @_1
la $t0, _1
lw $t0, 0($t0)
sw $t0, -864($sp)
#%105 = icmp slt i32 %104, 5
lw $t1, -864($sp)
li $t2, 5
slt $t0, $t1, $t2
sw $t0, -868($sp)
#br i1 %105, label %110, label %106
lw $t0, -868($sp)
bgtz $t0, main_110
j main_106
main_106:
#%107 = getelementptr [2 x i32], [2 x i32]* @aaa, i32 0, i32 0
la $t0, aaa
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -872($sp)
#%108 = load i32, i32* %107
lw $t0, -872($sp)
lw $t0, 0($t0)
sw $t0, -876($sp)
#%109 = icmp slt i32 %108, 10
lw $t1, -876($sp)
li $t2, 10
slt $t0, $t1, $t2
sw $t0, -880($sp)
#br i1 %109, label %110, label %113
lw $t0, -880($sp)
bgtz $t0, main_110
j main_113
main_110:
#%111 = load i32, i32* %103
lw $t0, -860($sp)
sw $t0, -884($sp)
#%112 = add i32 %111, 1
lw $t1, -884($sp)
li $t2, 1
add $t0, $t1, $t2
sw $t0, -888($sp)
#store i32 %112, i32* %103
lw $t0, -888($sp)
sw $t0, -860($sp)
#br label %113
j main_113
main_113:
#%114 = load i32, i32* @_2
la $t0, _2
lw $t0, 0($t0)
sw $t0, -892($sp)
#%115 = icmp slt i32 %114, 0
lw $t1, -892($sp)
li $t2, 0
slt $t0, $t1, $t2
sw $t0, -896($sp)
#br i1 %115, label %116, label %123
lw $t0, -896($sp)
bgtz $t0, main_116
j main_123
main_116:
#%117 = getelementptr [2 x i32], [2 x i32]* @aaa, i32 0, i32 0
la $t0, aaa
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -900($sp)
#%118 = load i32, i32* %117
lw $t0, -900($sp)
lw $t0, 0($t0)
sw $t0, -904($sp)
#%119 = icmp sgt i32 %118, 10
lw $t1, -904($sp)
li $t2, 10
sgt $t0, $t1, $t2
sw $t0, -908($sp)
#br i1 %119, label %120, label %123
lw $t0, -908($sp)
bgtz $t0, main_120
j main_123
main_120:
#%121 = load i32, i32* %103
lw $t0, -860($sp)
sw $t0, -912($sp)
#%122 = add i32 %121, 2
lw $t1, -912($sp)
li $t2, 2
add $t0, $t1, $t2
sw $t0, -916($sp)
#store i32 %122, i32* %103
lw $t0, -916($sp)
sw $t0, -860($sp)
#br label %123
j main_123
main_123:
#%124 = call i32 @getint() 
getInt
sw $v0, -920($sp)
#%125 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @dijhw, i32 0, i32 0, i32 0
la $t0, dijhw
addi $t0, $t0, 0
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -924($sp)
#store i32 %124, i32* %125
lw $t0, -920($sp)
lw $t1, -924($sp)
sw $t0, 0($t1)
#%126 = call i32 @getint() 
getInt
sw $v0, -928($sp)
#%127 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @dijhw, i32 0, i32 1, i32 0
la $t0, dijhw
addi $t0, $t0, 0
addi $t0, $t0, 8
addi $t0, $t0, 0
sw $t0, -932($sp)
#store i32 %126, i32* %127
lw $t0, -928($sp)
lw $t1, -932($sp)
sw $t0, 0($t1)
#%128 = call i32 @getint() 
getInt
sw $v0, -936($sp)
#%129 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @dijhw, i32 0, i32 2, i32 0
la $t0, dijhw
addi $t0, $t0, 0
addi $t0, $t0, 16
addi $t0, $t0, 0
sw $t0, -940($sp)
#store i32 %128, i32* %129
lw $t0, -936($sp)
lw $t1, -940($sp)
sw $t0, 0($t1)
#%130 = call i32 @getint() 
getInt
sw $v0, -944($sp)
#%131 = getelementptr [2 x i32], [2 x i32]* @cdwuh, i32 0, i32 0
la $t0, cdwuh
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -948($sp)
#store i32 %130, i32* %131
lw $t0, -944($sp)
lw $t1, -948($sp)
sw $t0, 0($t1)
#%132 = call i32 @getint() 
getInt
sw $v0, -952($sp)
#%133 = getelementptr [2 x i32], [2 x i32]* @cdwuh, i32 0, i32 1
la $t0, cdwuh
addi $t0, $t0, 0
addi $t0, $t0, 4
sw $t0, -956($sp)
#store i32 %132, i32* %133
lw $t0, -952($sp)
lw $t1, -956($sp)
sw $t0, 0($t1)
#%134 = call i32 @getint() 
getInt
sw $v0, -960($sp)
#store i32 %134, i32* @wuei
lw $t0, -960($sp)
la $t1, wuei
sw $t0, 0($t1)
#%135 = load i32, i32* @wuei
la $t0, wuei
lw $t0, 0($t0)
sw $t0, -964($sp)
#%136 = getelementptr [2 x i32], [2 x i32]* @cdwuh, i32 0, i32 0
la $t0, cdwuh
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -968($sp)
#%137 = load i32, i32* %136
lw $t0, -968($sp)
lw $t0, 0($t0)
sw $t0, -972($sp)
#%138 = getelementptr [2 x i32], [2 x i32]* @cdwuh, i32 0, i32 1
la $t0, cdwuh
addi $t0, $t0, 0
addi $t0, $t0, 4
sw $t0, -976($sp)
#%139 = load i32, i32* %138
lw $t0, -976($sp)
lw $t0, 0($t0)
sw $t0, -980($sp)
#%140 = mul i32 %137, %139
lw $t1, -972($sp)
lw $t2, -980($sp)
mult $t1, $t2
mflo $t0
sw $t0, -984($sp)
#%141 = add i32 %135, %140
lw $t1, -964($sp)
lw $t2, -984($sp)
add $t0, $t1, $t2
sw $t0, -988($sp)
#%142 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @dijhw, i32 0, i32 0, i32 1
la $t0, dijhw
addi $t0, $t0, 0
addi $t0, $t0, 0
addi $t0, $t0, 4
sw $t0, -992($sp)
#%143 = load i32, i32* %142
lw $t0, -992($sp)
lw $t0, 0($t0)
sw $t0, -996($sp)
#%144 = mul i32 2, 1
li $t1, 2
li $t2, 1
mult $t1, $t2
mflo $t0
sw $t0, -1000($sp)
#%145 = sdiv i32 %143, %144
lw $t1, -996($sp)
lw $t2, -1000($sp)
div $t1, $t2
mflo $t0
sw $t0, -1004($sp)
#%146 = add i32 %141, %145
lw $t1, -988($sp)
lw $t2, -1004($sp)
add $t0, $t1, $t2
sw $t0, -1008($sp)
#store i32 %146, i32* @wuei
lw $t0, -1008($sp)
la $t1, wuei
sw $t0, 0($t1)
#%147 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @dijhw, i32 0, i32 2, i32 0
la $t0, dijhw
addi $t0, $t0, 0
addi $t0, $t0, 16
addi $t0, $t0, 0
sw $t0, -1012($sp)
#%148 = load i32, i32* %147
lw $t0, -1012($sp)
lw $t0, 0($t0)
sw $t0, -1016($sp)
#%149 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @dijhw, i32 0, i32 1, i32 0
la $t0, dijhw
addi $t0, $t0, 0
addi $t0, $t0, 8
addi $t0, $t0, 0
sw $t0, -1020($sp)
#%150 = load i32, i32* %149
lw $t0, -1020($sp)
lw $t0, 0($t0)
sw $t0, -1024($sp)
#%151 = mul i32 %148, %150
lw $t1, -1016($sp)
lw $t2, -1024($sp)
mult $t1, $t2
mflo $t0
sw $t0, -1028($sp)
#%152 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @dijhw, i32 0, i32 2, i32 1
la $t0, dijhw
addi $t0, $t0, 0
addi $t0, $t0, 16
addi $t0, $t0, 4
sw $t0, -1032($sp)
#store i32 %151, i32* %152
lw $t0, -1028($sp)
lw $t1, -1032($sp)
sw $t0, 0($t1)
#%153 = load i32, i32* %53
lw $t0, -668($sp)
sw $t0, -1036($sp)
#%154 = load i32, i32* %53
lw $t0, -668($sp)
sw $t0, -1040($sp)
#%155 = mul i32 %153, %154
lw $t1, -1036($sp)
lw $t2, -1040($sp)
mult $t1, $t2
mflo $t0
sw $t0, -1044($sp)
#%156 = load i32, i32* %15
lw $t0, -552($sp)
sw $t0, -1048($sp)
#%157 = load i32, i32* %16
lw $t0, -556($sp)
sw $t0, -1052($sp)
#%158 = call i32 @_add(i32 %156,i32 %157,i32 3) 
sw $ra, -1060($sp)
lw $t0, -1048($sp)
sw $t0, -1064($sp)
lw $t0, -1052($sp)
sw $t0, -1068($sp)
li $t0, 3
sw $t0, -1072($sp)
addi $sp, $sp, -1076
jal _add
addi $sp, $sp, 1076
lw $ra, -1060($sp)
sw $v0, -1056($sp)
#%159 = add i32 %155, %158
lw $t1, -1044($sp)
lw $t2, -1056($sp)
add $t0, $t1, $t2
sw $t0, -1060($sp)
#store i32 %159, i32* @jdfo_
lw $t0, -1060($sp)
la $t1, jdfo_
sw $t0, 0($t1)
#%160 = load i32, i32* %53
lw $t0, -668($sp)
sw $t0, -1064($sp)
#%161 = call i32 @_get_id() 
sw $ra, -1072($sp)
addi $sp, $sp, -1076
jal _get_id
addi $sp, $sp, 1076
lw $ra, -1072($sp)
sw $v0, -1068($sp)
#%162 = add i32 %160, %161
lw $t1, -1064($sp)
lw $t2, -1068($sp)
add $t0, $t1, $t2
sw $t0, -1072($sp)
#%163 = load i32, i32* %1
lw $t0, -464($sp)
sw $t0, -1076($sp)
#%164 = call i32 @_add_fake(i32 123243,i32 %163) 
sw $ra, -1084($sp)
li $t0, 123243
sw $t0, -1088($sp)
lw $t0, -1076($sp)
sw $t0, -1092($sp)
addi $sp, $sp, -1096
jal _add_fake
addi $sp, $sp, 1096
lw $ra, -1084($sp)
sw $v0, -1080($sp)
#%165 = add i32 %162, %164
lw $t1, -1072($sp)
lw $t2, -1080($sp)
add $t0, $t1, $t2
sw $t0, -1084($sp)
#store i32 %165, i32* %53
lw $t0, -1084($sp)
sw $t0, -668($sp)
#call void @___()
sw $ra, -1088($sp)
addi $sp, $sp, -1092
jal ___
addi $sp, $sp, 1092
lw $ra, -1088($sp)
#%166 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @_3u22, i32 0, i32 0
la $t0, _3u22
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -1088($sp)
#call void @_Main([2 x i32]* %166)
sw $ra, -1092($sp)
lw $t0, -1088($sp)
sw $t0, -1096($sp)
addi $sp, $sp, -1100
jal _Main
addi $sp, $sp, 1100
lw $ra, -1092($sp)
#%167 = getelementptr [4 x i32], [4 x i32]* @_23879, i32 0, i32 0
la $t0, _23879
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -1092($sp)
#call void @__(i32* %167,i32 3432)
sw $ra, -1096($sp)
lw $t0, -1092($sp)
sw $t0, -1100($sp)
li $t0, 3432
sw $t0, -1104($sp)
addi $sp, $sp, -1108
jal __
addi $sp, $sp, 1108
lw $ra, -1096($sp)
#call void @putch(i32 116)
li $a0, 116
putCh
#call void @putch(i32 101)
li $a0, 101
putCh
#call void @putch(i32 109)
li $a0, 109
putCh
#call void @putch(i32 112)
li $a0, 112
putCh
#call void @putch(i32 58)
li $a0, 58
putCh
#call void @putch(i32 32)
li $a0, 32
putCh
#%168 = load i32, i32* %103
lw $t0, -860($sp)
sw $t0, -1096($sp)
#call void @putint(i32 %168)
lw $a0, -1096($sp)
putInt
#call void @putch(i32 10)
li $a0, 10
putCh
#%169 = getelementptr [12 x i32], [12 x i32]* %73, i32 0, i32 0
lw $t0, -724($sp)
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -1100($sp)
#%170 = call i32 @__my_Ha_s__h(i32* %169,i32 12) 
sw $ra, -1108($sp)
lw $t0, -1100($sp)
sw $t0, -1112($sp)
li $t0, 12
sw $t0, -1116($sp)
addi $sp, $sp, -1120
jal __my_Ha_s__h
addi $sp, $sp, 1120
lw $ra, -1108($sp)
sw $v0, -1104($sp)
#call void @putint(i32 %170)
lw $a0, -1104($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%171 = load i32, i32* %53
lw $t0, -668($sp)
sw $t0, -1108($sp)
#call void @putint(i32 %171)
lw $a0, -1108($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#call void @putint(i32 1)
li $a0, 1
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%172 = load i32, i32* @_3
la $t0, _3
lw $t0, 0($t0)
sw $t0, -1112($sp)
#call void @putint(i32 %172)
lw $a0, -1112($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%173 = load i32, i32* @_2
la $t0, _2
lw $t0, 0($t0)
sw $t0, -1116($sp)
#call void @putint(i32 %173)
lw $a0, -1116($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%174 = load i32, i32* @_10
la $t0, _10
lw $t0, 0($t0)
sw $t0, -1120($sp)
#call void @putint(i32 %174)
lw $a0, -1120($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%175 = getelementptr [2 x i32], [2 x i32]* @aaa, i32 0, i32 0
la $t0, aaa
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -1124($sp)
#%176 = load i32, i32* %175
lw $t0, -1124($sp)
lw $t0, 0($t0)
sw $t0, -1128($sp)
#call void @putint(i32 %176)
lw $a0, -1128($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%177 = getelementptr [2 x i32], [2 x i32]* @aaa, i32 0, i32 1
la $t0, aaa
addi $t0, $t0, 0
addi $t0, $t0, 4
sw $t0, -1132($sp)
#%178 = load i32, i32* %177
lw $t0, -1132($sp)
lw $t0, 0($t0)
sw $t0, -1136($sp)
#call void @putint(i32 %178)
lw $a0, -1136($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%179 = getelementptr [4 x [3 x i32]], [4 x [3 x i32]]* @A, i32 0, i32 0, i32 0
la $t0, A
addi $t0, $t0, 0
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -1140($sp)
#%180 = load i32, i32* %179
lw $t0, -1140($sp)
lw $t0, 0($t0)
sw $t0, -1144($sp)
#call void @putint(i32 %180)
lw $a0, -1144($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%181 = getelementptr [4 x [3 x i32]], [4 x [3 x i32]]* @A, i32 0, i32 0, i32 1
la $t0, A
addi $t0, $t0, 0
addi $t0, $t0, 0
addi $t0, $t0, 4
sw $t0, -1148($sp)
#%182 = load i32, i32* %181
lw $t0, -1148($sp)
lw $t0, 0($t0)
sw $t0, -1152($sp)
#call void @putint(i32 %182)
lw $a0, -1152($sp)
putInt
#call void @putch(i32 10)
li $a0, 10
putCh
#%183 = getelementptr [4 x [3 x i32]], [4 x [3 x i32]]* @A, i32 0, i32 0, i32 2
la $t0, A
addi $t0, $t0, 0
addi $t0, $t0, 0
addi $t0, $t0, 8
sw $t0, -1156($sp)
#%184 = load i32, i32* %183
lw $t0, -1156($sp)
lw $t0, 0($t0)
sw $t0, -1160($sp)
#call void @putint(i32 %184)
lw $a0, -1160($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%185 = getelementptr [4 x [3 x i32]], [4 x [3 x i32]]* @A, i32 0, i32 1, i32 0
la $t0, A
addi $t0, $t0, 0
addi $t0, $t0, 12
addi $t0, $t0, 0
sw $t0, -1164($sp)
#%186 = load i32, i32* %185
lw $t0, -1164($sp)
lw $t0, 0($t0)
sw $t0, -1168($sp)
#call void @putint(i32 %186)
lw $a0, -1168($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%187 = getelementptr [4 x [3 x i32]], [4 x [3 x i32]]* @A, i32 0, i32 1, i32 1
la $t0, A
addi $t0, $t0, 0
addi $t0, $t0, 12
addi $t0, $t0, 4
sw $t0, -1172($sp)
#%188 = load i32, i32* %187
lw $t0, -1172($sp)
lw $t0, 0($t0)
sw $t0, -1176($sp)
#call void @putint(i32 %188)
lw $a0, -1176($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%189 = getelementptr [4 x [3 x i32]], [4 x [3 x i32]]* @A, i32 0, i32 1, i32 2
la $t0, A
addi $t0, $t0, 0
addi $t0, $t0, 12
addi $t0, $t0, 8
sw $t0, -1180($sp)
#%190 = load i32, i32* %189
lw $t0, -1180($sp)
lw $t0, 0($t0)
sw $t0, -1184($sp)
#call void @putint(i32 %190)
lw $a0, -1184($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%191 = getelementptr [4 x [3 x i32]], [4 x [3 x i32]]* @A, i32 0, i32 2, i32 0
la $t0, A
addi $t0, $t0, 0
addi $t0, $t0, 24
addi $t0, $t0, 0
sw $t0, -1188($sp)
#%192 = load i32, i32* %191
lw $t0, -1188($sp)
lw $t0, 0($t0)
sw $t0, -1192($sp)
#call void @putint(i32 %192)
lw $a0, -1192($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%193 = getelementptr [4 x [3 x i32]], [4 x [3 x i32]]* @A, i32 0, i32 2, i32 1
la $t0, A
addi $t0, $t0, 0
addi $t0, $t0, 24
addi $t0, $t0, 4
sw $t0, -1196($sp)
#%194 = load i32, i32* %193
lw $t0, -1196($sp)
lw $t0, 0($t0)
sw $t0, -1200($sp)
#call void @putint(i32 %194)
lw $a0, -1200($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%195 = getelementptr [4 x [3 x i32]], [4 x [3 x i32]]* @A, i32 0, i32 2, i32 2
la $t0, A
addi $t0, $t0, 0
addi $t0, $t0, 24
addi $t0, $t0, 8
sw $t0, -1204($sp)
#%196 = load i32, i32* %195
lw $t0, -1204($sp)
lw $t0, 0($t0)
sw $t0, -1208($sp)
#call void @putint(i32 %196)
lw $a0, -1208($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%197 = getelementptr [4 x [3 x i32]], [4 x [3 x i32]]* @A, i32 0, i32 3, i32 0
la $t0, A
addi $t0, $t0, 0
addi $t0, $t0, 36
addi $t0, $t0, 0
sw $t0, -1212($sp)
#%198 = load i32, i32* %197
lw $t0, -1212($sp)
lw $t0, 0($t0)
sw $t0, -1216($sp)
#call void @putint(i32 %198)
lw $a0, -1216($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%199 = getelementptr [4 x [3 x i32]], [4 x [3 x i32]]* @A, i32 0, i32 3, i32 1
la $t0, A
addi $t0, $t0, 0
addi $t0, $t0, 36
addi $t0, $t0, 4
sw $t0, -1220($sp)
#%200 = load i32, i32* %199
lw $t0, -1220($sp)
lw $t0, 0($t0)
sw $t0, -1224($sp)
#call void @putint(i32 %200)
lw $a0, -1224($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%201 = getelementptr [4 x [3 x i32]], [4 x [3 x i32]]* @A, i32 0, i32 3, i32 2
la $t0, A
addi $t0, $t0, 0
addi $t0, $t0, 36
addi $t0, $t0, 8
sw $t0, -1228($sp)
#%202 = load i32, i32* %201
lw $t0, -1228($sp)
lw $t0, 0($t0)
sw $t0, -1232($sp)
#call void @putint(i32 %202)
lw $a0, -1232($sp)
putInt
#call void @putch(i32 10)
li $a0, 10
putCh
#%203 = load i32, i32* @_3cg
la $t0, _3cg
lw $t0, 0($t0)
sw $t0, -1236($sp)
#call void @putint(i32 %203)
lw $a0, -1236($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%204 = load i32, i32* @hdc33ec_dyu
la $t0, hdc33ec_dyu
lw $t0, 0($t0)
sw $t0, -1240($sp)
#call void @putint(i32 %204)
lw $a0, -1240($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%205 = load i32, i32* @cdh3yi_23
la $t0, cdh3yi_23
lw $t0, 0($t0)
sw $t0, -1244($sp)
#call void @putint(i32 %205)
lw $a0, -1244($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%206 = load i32, i32* @duhih2_23c
la $t0, duhih2_23c
lw $t0, 0($t0)
sw $t0, -1248($sp)
#call void @putint(i32 %206)
lw $a0, -1248($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%207 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @dijhw, i32 0, i32 0, i32 0
la $t0, dijhw
addi $t0, $t0, 0
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -1252($sp)
#%208 = load i32, i32* %207
lw $t0, -1252($sp)
lw $t0, 0($t0)
sw $t0, -1256($sp)
#call void @putint(i32 %208)
lw $a0, -1256($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%209 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @dijhw, i32 0, i32 0, i32 1
la $t0, dijhw
addi $t0, $t0, 0
addi $t0, $t0, 0
addi $t0, $t0, 4
sw $t0, -1260($sp)
#%210 = load i32, i32* %209
lw $t0, -1260($sp)
lw $t0, 0($t0)
sw $t0, -1264($sp)
#call void @putint(i32 %210)
lw $a0, -1264($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%211 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @dijhw, i32 0, i32 1, i32 0
la $t0, dijhw
addi $t0, $t0, 0
addi $t0, $t0, 8
addi $t0, $t0, 0
sw $t0, -1268($sp)
#%212 = load i32, i32* %211
lw $t0, -1268($sp)
lw $t0, 0($t0)
sw $t0, -1272($sp)
#call void @putint(i32 %212)
lw $a0, -1272($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%213 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @dijhw, i32 0, i32 1, i32 1
la $t0, dijhw
addi $t0, $t0, 0
addi $t0, $t0, 8
addi $t0, $t0, 4
sw $t0, -1276($sp)
#%214 = load i32, i32* %213
lw $t0, -1276($sp)
lw $t0, 0($t0)
sw $t0, -1280($sp)
#call void @putint(i32 %214)
lw $a0, -1280($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%215 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @dijhw, i32 0, i32 2, i32 0
la $t0, dijhw
addi $t0, $t0, 0
addi $t0, $t0, 16
addi $t0, $t0, 0
sw $t0, -1284($sp)
#%216 = load i32, i32* %215
lw $t0, -1284($sp)
lw $t0, 0($t0)
sw $t0, -1288($sp)
#call void @putint(i32 %216)
lw $a0, -1288($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%217 = getelementptr [3 x [2 x i32]], [3 x [2 x i32]]* @dijhw, i32 0, i32 2, i32 1
la $t0, dijhw
addi $t0, $t0, 0
addi $t0, $t0, 16
addi $t0, $t0, 4
sw $t0, -1292($sp)
#%218 = load i32, i32* %217
lw $t0, -1292($sp)
lw $t0, 0($t0)
sw $t0, -1296($sp)
#call void @putint(i32 %218)
lw $a0, -1296($sp)
putInt
#call void @putch(i32 10)
li $a0, 10
putCh
#%219 = getelementptr [2 x i32], [2 x i32]* @cdwuh, i32 0, i32 0
la $t0, cdwuh
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -1300($sp)
#%220 = load i32, i32* %219
lw $t0, -1300($sp)
lw $t0, 0($t0)
sw $t0, -1304($sp)
#call void @putint(i32 %220)
lw $a0, -1304($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%221 = getelementptr [2 x i32], [2 x i32]* @cdwuh, i32 0, i32 1
la $t0, cdwuh
addi $t0, $t0, 0
addi $t0, $t0, 4
sw $t0, -1308($sp)
#%222 = load i32, i32* %221
lw $t0, -1308($sp)
lw $t0, 0($t0)
sw $t0, -1312($sp)
#call void @putint(i32 %222)
lw $a0, -1312($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%223 = load i32, i32* @wuei
la $t0, wuei
lw $t0, 0($t0)
sw $t0, -1316($sp)
#call void @putint(i32 %223)
lw $a0, -1316($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%224 = load i32, i32* @jdfo_
la $t0, jdfo_
lw $t0, 0($t0)
sw $t0, -1320($sp)
#call void @putint(i32 %224)
lw $a0, -1320($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%225 = getelementptr [2 x i32], [2 x i32]* @cdwuh, i32 0, i32 0
la $t0, cdwuh
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -1324($sp)
#%226 = call i32 @__my_Ha_s__h(i32* %225,i32 2) 
sw $ra, -1332($sp)
lw $t0, -1324($sp)
sw $t0, -1336($sp)
li $t0, 2
sw $t0, -1340($sp)
addi $sp, $sp, -1344
jal __my_Ha_s__h
addi $sp, $sp, 1344
lw $ra, -1332($sp)
sw $v0, -1328($sp)
#%227 = call i32 @_M__a_G_I___c(i32 %226) 
sw $ra, -1336($sp)
lw $t0, -1328($sp)
sw $t0, -1340($sp)
addi $sp, $sp, -1344
jal _M__a_G_I___c
addi $sp, $sp, 1344
lw $ra, -1336($sp)
sw $v0, -1332($sp)
#call void @putint(i32 %227)
lw $a0, -1332($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%228 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @_3u22, i32 0, i32 0
la $t0, _3u22
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -1336($sp)
#%229 = getelementptr [2 x i32], [2 x i32]* %228, i32 0, i32 0
lw $t0, -1336($sp)
addi $t0, $t0, 0
addi $t0, $t0, 0
sw $t0, -1340($sp)
#%230 = call i32 @__my_Ha_s__h(i32* %229,i32 2) 
sw $ra, -1348($sp)
lw $t0, -1340($sp)
sw $t0, -1352($sp)
li $t0, 2
sw $t0, -1356($sp)
addi $sp, $sp, -1360
jal __my_Ha_s__h
addi $sp, $sp, 1360
lw $ra, -1348($sp)
sw $v0, -1344($sp)
#call void @putint(i32 %230)
lw $a0, -1344($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%231 = load i32, i32* %18
lw $t0, -564($sp)
sw $t0, -1348($sp)
#call void @putint(i32 %231)
lw $a0, -1348($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%232 = load i32, i32* %17
lw $t0, -560($sp)
sw $t0, -1352($sp)
#call void @putint(i32 %232)
lw $a0, -1352($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%233 = load i32, i32* %5
lw $t0, -480($sp)
sw $t0, -1356($sp)
#call void @putint(i32 %233)
lw $a0, -1356($sp)
putInt
#call void @putch(i32 32)
li $a0, 32
putCh
#%234 = getelementptr [2 x [4 x i32]], [2 x [4 x i32]]* %6, i32 0, i32 0, i32 2
lw $t0, -484($sp)
addi $t0, $t0, 0
addi $t0, $t0, 0
addi $t0, $t0, 8
sw $t0, -1360($sp)
#%235 = load i32, i32* %234
lw $t0, -1360($sp)
lw $t0, 0($t0)
sw $t0, -1364($sp)
#call void @putint(i32 %235)
lw $a0, -1364($sp)
putInt
#call void @putch(i32 10)
li $a0, 10
putCh
#%236 = load i32, i32* %19
lw $t0, -568($sp)
sw $t0, -1368($sp)
#call void @____(i32 %236)
sw $ra, -1372($sp)
lw $t0, -1368($sp)
sw $t0, -1376($sp)
addi $sp, $sp, -1380
jal ____
addi $sp, $sp, 1380
lw $ra, -1372($sp)
#ret i32 0
li $v0, 0
jr $ra
