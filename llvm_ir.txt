declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@a = dso_local global [6 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5, i32 6]
@b = dso_local global [3 x [3 x i32]] [[3 x i32] [i32 3, i32 8, i32 5], [3 x i32] [i32 1, i32 2, i32 0], [3 x i32] zeroinitializer]
define dso_local void @a1(i32 %0) {
1:
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* %2
	%4 = icmp sgt i32 %3, 1
	br i1 %4, label %5, label %8
5:
	%6 = load i32, i32* %2
	%7 = sub i32 %6, 1
	call void @a1(i32 %7)
	br label %8
8:
	ret void
}
define dso_local i32 @a2(i32 %0, i32* %1) {
2:
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca i32*
	store i32* %1, i32** %4
	%5 = load i32, i32* %3
	%6 = load i32*, i32** %4
	%7 = getelementptr i32, i32* %6, i32 2
	%8 = load i32, i32* %7
	%9 = add i32 %5, %8
	ret i32 %9
}
define dso_local i32 @a3(i32 %0, i32* %1, [3 x i32]* %2) {
3:
	%4 = alloca i32
	store i32 %0, i32* %4
	%5 = alloca i32*
	store i32* %1, i32** %5
	%6 = alloca [3 x i32]*
	store [3 x i32]* %2, [3 x i32]** %6
	%7 = load i32, i32* %4
	%8 = load i32*, i32** %5
	%9 = getelementptr i32, i32* %8, i32 1
	%10 = load i32, i32* %9
	%11 = mul i32 %7, %10
	%12 = load [3 x i32]*, [3 x i32]** %6
	%13 = getelementptr [3 x i32], [3 x i32]* %12, i32 2, i32 1
	%14 = load i32, i32* %13
	%15 = sub i32 %11, %14
	ret i32 %15
}
define dso_local i32 @main() {
0:
	%1 = alloca [2 x [3 x i32]]
	%2 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %1, i32 0, i32 0, i32 0
	store i32 1, i32* %2
	%3 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %1, i32 0, i32 0, i32 1
	store i32 2, i32* %3
	%4 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %1, i32 0, i32 0, i32 2
	store i32 3, i32* %4
	%5 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %1, i32 0, i32 1, i32 0
	store i32 0, i32* %5
	%6 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %1, i32 0, i32 1, i32 1
	store i32 0, i32* %6
	%7 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %1, i32 0, i32 1, i32 2
	store i32 0, i32* %7
	%8 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %1, i32 0, i32 0, i32 2
	%9 = load i32, i32* %8
	call void @a1(i32 %9)
	%10 = getelementptr [6 x i32], [6 x i32]* @a, i32 0, i32 4
	%11 = load i32, i32* %10
	%12 = getelementptr [6 x i32], [6 x i32]* @a, i32 0, i32 0
	%13 = call i32 @a2(i32 %11,i32* %12) 
	%14 = alloca i32
	store i32 %13, i32* %14
	%15 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @b, i32 0, i32 0, i32 1
	%16 = load i32, i32* %15
	%17 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @b, i32 0, i32 1
	%18 = getelementptr [3 x i32], [3 x i32]* %17, i32 0, i32 0
	%19 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @b, i32 0, i32 0
	%20 = call i32 @a3(i32 %16,i32* %18,[3 x i32]* %19) 
	%21 = alloca i32
	store i32 %20, i32* %21
	%22 = load i32, i32* %14
	%23 = load i32, i32* %21
	%24 = add i32 %22, %23
	call void @putint(i32 %24)
	ret i32 0
}
