declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@a_global = dso_local global i32 0
@b_global = dso_local constant i32 1
define dso_local void @func1() {
0:
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 49)
	call void @putch(i32 56)
	call void @putch(i32 50)
	call void @putch(i32 54)
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 10)
	ret void
}
define dso_local void @func2(i32 %0) {
1:
	%2 = sub i32 %0, 1
	ret void
}
define dso_local void @func3(i32 %0, i32* %1, [2 x i32]* %2) {
3:
	%4 = alloca i32*
	store i32* %1, i32** %4
	%5 = alloca [2 x i32]*
	store [2 x i32]* %2, [2 x i32]** %5
	%6 = load i32*, i32** %4
	%7 = getelementptr i32, i32* %6, i32 0
	%8 = load i32, i32* %7
	%9 = load [2 x i32]*, [2 x i32]** %5
	%10 = getelementptr [2 x i32], [2 x i32]* %9, i32 0, i32 0
	%11 = load i32, i32* %10
	%12 = add i32 %8, %11
	ret void
}
define dso_local i32 @func4() {
0:
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 49)
	call void @putch(i32 56)
	call void @putch(i32 50)
	call void @putch(i32 54)
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 10)
	ret i32 0
}
define dso_local i32 @func5(i32 %0) {
1:
	%2 = add i32 %0, 1
	ret i32 %2
}
define dso_local i32 @func6(i32 %0, i32* %1) {
2:
	%3 = alloca i32*
	store i32* %1, i32** %3
	%4 = load i32*, i32** %3
	%5 = getelementptr i32, i32* %4, i32 0
	%6 = load i32, i32* %5
	%7 = add i32 %0, %6
	ret i32 %7
}
define dso_local i32 @main() {
0:
	%1 = call i32 @getint() 
	%2 = alloca [2 x i32]
	%3 = getelementptr [2 x i32], [2 x i32]* %2, i32 0, i32 0
	store i32 1, i32* %3
	%4 = getelementptr [2 x i32], [2 x i32]* %2, i32 0, i32 1
	store i32 2, i32* %4
	%5 = alloca [2 x i32]
	%6 = getelementptr [2 x i32], [2 x i32]* %5, i32 0, i32 0
	store i32 1, i32* %6
	%7 = getelementptr [2 x i32], [2 x i32]* %5, i32 0, i32 1
	store i32 2, i32* %7
	%8 = alloca [3 x i32]
	%9 = getelementptr [3 x i32], [3 x i32]* %8, i32 0, i32 0
	store i32 3, i32* %9
	%10 = getelementptr [3 x i32], [3 x i32]* %8, i32 0, i32 1
	store i32 4, i32* %10
	%11 = getelementptr [3 x i32], [3 x i32]* %8, i32 0, i32 2
	store i32 5, i32* %11
	%12 = alloca [2 x [2 x i32]]
	%13 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %12, i32 0, i32 0, i32 0
	store i32 1, i32* %13
	%14 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %12, i32 0, i32 0, i32 1
	store i32 2, i32* %14
	%15 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %12, i32 0, i32 1, i32 0
	store i32 1, i32* %15
	%16 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %12, i32 0, i32 1, i32 1
	store i32 2, i32* %16
	%17 = alloca [2 x [2 x i32]]
	%18 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %17, i32 0, i32 0, i32 0
	store i32 1, i32* %18
	%19 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %17, i32 0, i32 0, i32 1
	store i32 2, i32* %19
	%20 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %17, i32 0, i32 1, i32 0
	store i32 1, i32* %20
	%21 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %17, i32 0, i32 1, i32 1
	store i32 2, i32* %21
	%22 = alloca [1 x [3 x i32]]
	%23 = getelementptr [1 x [3 x i32]], [1 x [3 x i32]]* %22, i32 0, i32 0, i32 0
	store i32 1, i32* %23
	%24 = getelementptr [1 x [3 x i32]], [1 x [3 x i32]]* %22, i32 0, i32 0, i32 1
	store i32 2, i32* %24
	%25 = getelementptr [1 x [3 x i32]], [1 x [3 x i32]]* %22, i32 0, i32 0, i32 2
	store i32 3, i32* %25
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 49)
	call void @putch(i32 56)
	call void @putch(i32 50)
	call void @putch(i32 54)
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 10)
	%26 = alloca [2 x i32]
	%27 = getelementptr [2 x i32], [2 x i32]* %26, i32 0, i32 0
	store i32 1, i32* %27
	%28 = getelementptr [2 x i32], [2 x i32]* %26, i32 0, i32 1
	store i32 2, i32* %28
	%29 = alloca [2 x i32]
	%30 = getelementptr [2 x i32], [2 x i32]* %29, i32 0, i32 0
	store i32 1, i32* %30
	%31 = getelementptr [2 x i32], [2 x i32]* %29, i32 0, i32 1
	store i32 2, i32* %31
	%32 = alloca [3 x i32]
	%33 = getelementptr [3 x i32], [3 x i32]* %32, i32 0, i32 0
	store i32 3, i32* %33
	%34 = getelementptr [3 x i32], [3 x i32]* %32, i32 0, i32 1
	store i32 4, i32* %34
	%35 = getelementptr [3 x i32], [3 x i32]* %32, i32 0, i32 2
	store i32 5, i32* %35
	%36 = alloca [2 x i32]
	%37 = alloca [3 x i32]
	%38 = getelementptr [3 x i32], [3 x i32]* %37, i32 0, i32 0
	store i32 3, i32* %38
	%39 = getelementptr [3 x i32], [3 x i32]* %37, i32 0, i32 1
	store i32 4, i32* %39
	%40 = getelementptr [3 x i32], [3 x i32]* %37, i32 0, i32 2
	store i32 5, i32* %40
	%41 = getelementptr [2 x i32], [2 x i32]* %36, i32 0, i32 1
	store i32 1, i32* %41
	%42 = getelementptr [3 x i32], [3 x i32]* %37, i32 0, i32 1
	store i32 3, i32* %42
	%43 = alloca [2 x [2 x i32]]
	%44 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %43, i32 0, i32 0, i32 0
	store i32 1, i32* %44
	%45 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %43, i32 0, i32 0, i32 1
	store i32 2, i32* %45
	%46 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %43, i32 0, i32 1, i32 0
	store i32 1, i32* %46
	%47 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %43, i32 0, i32 1, i32 1
	store i32 2, i32* %47
	%48 = alloca [2 x [2 x i32]]
	%49 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %48, i32 0, i32 0, i32 0
	store i32 1, i32* %49
	%50 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %48, i32 0, i32 0, i32 1
	store i32 2, i32* %50
	%51 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %48, i32 0, i32 1, i32 0
	store i32 1, i32* %51
	%52 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %48, i32 0, i32 1, i32 1
	store i32 2, i32* %52
	%53 = alloca [1 x [3 x i32]]
	%54 = getelementptr [1 x [3 x i32]], [1 x [3 x i32]]* %53, i32 0, i32 0, i32 0
	store i32 1, i32* %54
	%55 = getelementptr [1 x [3 x i32]], [1 x [3 x i32]]* %53, i32 0, i32 0, i32 1
	store i32 2, i32* %55
	%56 = getelementptr [1 x [3 x i32]], [1 x [3 x i32]]* %53, i32 0, i32 0, i32 2
	store i32 3, i32* %56
	%57 = alloca [2 x [2 x i32]]
	%58 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %57, i32 0, i32 0, i32 0
	store i32 1, i32* %58
	%59 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %57, i32 0, i32 0, i32 1
	store i32 2, i32* %59
	%60 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %57, i32 0, i32 1, i32 0
	store i32 1, i32* %60
	%61 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %57, i32 0, i32 1, i32 1
	store i32 2, i32* %61
	%62 = alloca [1 x [3 x i32]]
	%63 = getelementptr [1 x [3 x i32]], [1 x [3 x i32]]* %62, i32 0, i32 0, i32 0
	store i32 1, i32* %63
	%64 = getelementptr [1 x [3 x i32]], [1 x [3 x i32]]* %62, i32 0, i32 0, i32 1
	store i32 2, i32* %64
	%65 = getelementptr [1 x [3 x i32]], [1 x [3 x i32]]* %62, i32 0, i32 0, i32 2
	store i32 3, i32* %65
	%66 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %57, i32 0, i32 1, i32 1
	store i32 1, i32* %66
	%67 = getelementptr [1 x [3 x i32]], [1 x [3 x i32]]* %62, i32 0, i32 0, i32 1
	store i32 1, i32* %67
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 49)
	call void @putch(i32 56)
	call void @putch(i32 50)
	call void @putch(i32 54)
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 10)
	call void @func1()
	call void @func2(i32 1)
	%68 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %43, i32 0, i32 0
	%69 = getelementptr [2 x i32], [2 x i32]* %68, i32 0, i32 0
	%70 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %43, i32 0, i32 0
	call void @func3(i32 1,i32* %69,[2 x i32]* %70)
	%71 = call i32 @func4() 
	%72 = call i32 @func5(i32 1) 
	%73 = getelementptr [2 x i32], [2 x i32]* %26, i32 0, i32 0
	%74 = call i32 @func6(i32 1,i32* %73) 
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 49)
	call void @putch(i32 56)
	call void @putch(i32 50)
	call void @putch(i32 54)
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 10)
	br label %75
75:
	%76 = phi i32 [ 1, %0 ], [ %80, %79 ]
	%77 = icmp sle i32 %76, 5
	br i1 %77, label %78, label %81
78:
	br label %79
79:
	%80 = add i32 %76, 1
	br label %75
81:
	br label %82
82:
	%83 = phi i32 [ 1, %81 ], [ %87, %86 ]
	%84 = icmp sle i32 %83, 5
	br i1 %84, label %85, label %88
85:
	br label %86
86:
	%87 = add i32 %83, 1
	br label %82
88:
	br label %89
89:
	br label %90
90:
	br label %91
91:
	br label %92
92:
	%93 = phi i32 [ 1, %91 ], [ %96, %97 ]
	%94 = icmp sle i32 %93, 5
	br i1 %94, label %95, label %98
95:
	%96 = add i32 %93, 1
	br label %97
97:
	br label %92
98:
	br label %99
99:
	br label %100
100:
	br label %101
101:
	br label %102
102:
	%103 = icmp sle i32 1, 5
	br i1 %103, label %104, label %105
104:
	br label %105
105:
	br label %106
106:
	br label %107
107:
	br label %108
108:
	br label %109
109:
	br label %110
110:
	br label %111
111:
	%112 = icmp eq i32 5, 3
	br i1 %112, label %113, label %114
113:
	br label %114
114:
	%115 = icmp eq i32 5, 2
	br i1 %115, label %116, label %117
116:
	br label %118
117:
	br label %118
118:
	call void @putint(i32 0)
	call void @putch(i32 10)
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 49)
	call void @putch(i32 56)
	call void @putch(i32 50)
	call void @putch(i32 54)
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 10)
	%119 = sub i32 0, 3
	%120 = mul i32 2, %119
	%121 = sdiv i32 %120, 4
	%122 = srem i32 %121, 5
	%123 = add i32 1, %122
	%124 = sub i32 0, %123
	%125 = sub i32 0, %124
	%126 = icmp ne i32 3, 4
	br i1 %126, label %129, label %127
127:
	%128 = icmp eq i32 0, 0
	br i1 %128, label %129, label %130
129:
	br label %130
130:
	%131 = icmp slt i32 1, 2
	br i1 %131, label %138, label %132
132:
	%133 = icmp sgt i32 1, 3
	br i1 %133, label %134, label %136
134:
	%135 = icmp sle i32 1, 2
	br i1 %135, label %138, label %136
136:
	%137 = icmp sge i32 1, 3
	br i1 %137, label %138, label %139
138:
	br label %139
139:
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 49)
	call void @putch(i32 56)
	call void @putch(i32 50)
	call void @putch(i32 54)
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 10)
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 49)
	call void @putch(i32 56)
	call void @putch(i32 50)
	call void @putch(i32 54)
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 10)
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 49)
	call void @putch(i32 56)
	call void @putch(i32 50)
	call void @putch(i32 54)
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 10)
	ret i32 0
}
