declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@ZERO = dso_local constant i32 0
@ONE = dso_local constant i32 1
@var2 = dso_local global i32 2
@var3 = dso_local global i32 3
define dso_local void @fun() {
0:
	%1 = alloca i32
	store i32 1, i32* %1
	%2 = alloca i32
	store i32 1, i32* %2
	br label %3
3:
	%4 = load i32, i32* %2
	%5 = icmp slt i32 %4, 1000
	br i1 %5, label %6, label %10
6:
	%7 = load i32, i32* %2
	%8 = mul i32 %7, 2
	store i32 %8, i32* %2
	br label %9
9:
	br label %3
10:
	call void @putch(i32 10)
	%11 = load i32, i32* %2
	call void @putint(i32 %11)
	ret void
}
define dso_local i32 @main() {
0:
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 51)
	call void @putch(i32 55)
	call void @putch(i32 51)
	call void @putch(i32 52)
	call void @putch(i32 53)
	call void @putch(i32 55)
	call void @putch(i32 10)
	%1 = load i32, i32* @ZERO
	%2 = load i32, i32* @var2
	%3 = add i32 %1, %2
	%4 = load i32, i32* @var3
	%5 = load i32, i32* @ONE
	%6 = sub i32 %4, %5
	%7 = icmp eq i32 %3, %6
	br i1 %7, label %8, label %26
8:
	%9 = load i32, i32* @ONE
	%10 = icmp ne i32 %9, 0
	br i1 %10, label %11, label %26
11:
	%12 = load i32, i32* @ZERO
	%13 = icmp ne i32 %12, 0
	br i1 %13, label %23, label %14
14:
	%15 = load i32, i32* @ZERO
	%16 = icmp ne i32 %15, 0
	br i1 %16, label %17, label %24
17:
	%18 = load i32, i32* @ONE
	%19 = add i32 %18, 1
	%20 = load i32, i32* @var2
	%21 = add i32 %19, %20
	%22 = icmp slt i32 %21, 0
	br i1 %22, label %23, label %24
23:
	call void @putch(i32 69)
	call void @putch(i32 82)
	call void @putch(i32 82)
	call void @putch(i32 79)
	call void @putch(i32 82)
	call void @putch(i32 33)
	call void @putch(i32 10)
	br label %25
24:
	call void @putch(i32 65)
	call void @putch(i32 110)
	call void @putch(i32 100)
	call void @putch(i32 32)
	call void @putch(i32 115)
	call void @putch(i32 117)
	call void @putch(i32 99)
	call void @putch(i32 99)
	call void @putch(i32 101)
	call void @putch(i32 115)
	call void @putch(i32 115)
	call void @putch(i32 33)
	call void @putch(i32 10)
	br label %25
25:
	br label %26
26:
	%27 = load i32, i32* @var3
	%28 = icmp ne i32 %27, 3
	br i1 %28, label %34, label %29
29:
	%30 = load i32, i32* @var2
	%31 = sub i32 %30, 22
	%32 = sub i32 0, 20
	%33 = icmp eq i32 %31, %32
	br i1 %33, label %34, label %50
34:
	%35 = load i32, i32* @ONE
	%36 = srem i32 %35, 2
	%37 = add i32 %36, 3
	%38 = mul i32 4, 2
	%39 = sub i32 %37, %38
	%40 = load i32, i32* @var3
	%41 = add i32 %39, %40
	%42 = load i32, i32* @var2
	%43 = add i32 %41, %42
	%44 = icmp sle i32 %43, 100
	br i1 %44, label %48, label %45
45:
	%46 = load i32, i32* @ONE
	%47 = icmp ne i32 %46, 0
	br i1 %47, label %48, label %49
48:
	call void @putch(i32 79)
	call void @putch(i32 114)
	call void @putch(i32 32)
	call void @putch(i32 112)
	call void @putch(i32 97)
	call void @putch(i32 115)
	call void @putch(i32 115)
	call void @putch(i32 33)
	call void @putch(i32 10)
	br label %49
49:
	br label %50
50:
	call void @putch(i32 84)
	call void @putch(i32 101)
	call void @putch(i32 115)
	call void @putch(i32 116)
	call void @putch(i32 49)
	call void @putch(i32 32)
	call void @putch(i32 83)
	call void @putch(i32 117)
	call void @putch(i32 99)
	call void @putch(i32 99)
	call void @putch(i32 101)
	call void @putch(i32 115)
	call void @putch(i32 115)
	call void @putch(i32 33)
	call void @fun()
	call void @fun()
	call void @fun()
	call void @fun()
	call void @fun()
	call void @fun()
	ret i32 0
}
