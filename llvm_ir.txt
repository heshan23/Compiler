declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@_a = dso_local constant i32 0
@HelLo_World = dso_local constant [5 x i32] [i32 1, i32 55, i32 0, i32 10, i32 9999]
@a_r__r = dso_local constant [2 x [2 x i32]] [[2 x i32] [i32 -1, i32 0], [2 x i32] [i32 6, i32 -555]]
@_A = dso_local constant i32 6
@B = dso_local constant [1 x [1 x i32]] [[1 x i32] [i32 9966]]
@_ = dso_local constant i32 12
@c = dso_local constant [1 x i32] [i32 555]
@__ = dso_local constant i32 4
@con_6 = dso_local constant [2 x [1 x i32]] [[1 x i32] zeroinitializer, [1 x i32] [i32 6]]
@lll = dso_local constant i32 1
@rrr = dso_local constant i32 2
@awk_ = dso_local constant i32 11
@const_num = dso_local constant i32 5
@yyy = dso_local constant [2 x [3 x i32]] [[3 x i32] [i32 1, i32 0, i32 2], [3 x i32] [i32 -1, i32 3, i32 -4]]
@var_1 = dso_local global i32 0
@var_2 = dso_local global [100 x i32] zeroinitializer
@var_3 = dso_local global [2 x [12 x i32]] zeroinitializer
@varr_1 = dso_local global i32 0
@varr_2 = dso_local global i32 10
@varr_3 = dso_local global [2 x i32] zeroinitializer
@varr_4 = dso_local global [5 x [999 x i32]] zeroinitializer
@varrr_1 = dso_local global i32 10
@varrr_2 = dso_local global [2 x i32] [i32 1, i32 2]
@varrr_3 = dso_local global [2 x [2 x i32]] [[2 x i32] [i32 6, i32 6], [2 x i32] [i32 -1, i32 0]]
@varrrr_1 = dso_local global i32 666
@varrrr_2 = dso_local global i32 0
@varrrr_3 = dso_local global [5 x i32] [i32 1, i32 5, i32 1, i32 96, i32 -5]
@varrrr_4 = dso_local global [1 x [2 x i32]] [[2 x i32] [i32 555, i32 -5]]
define dso_local void @func1(i32 %0) {
1:
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* @_a
	%4 = add i32 %3, 1
	%5 = add i32 %4, 2
	%6 = sub i32 %5, 1
	%7 = alloca i32
	store i32 1, i32* %7
	%8 = alloca i32
	store i32 2, i32* %8
	ret void
}
define dso_local i32 @func2(i32 %0, i32* %1) {
2:
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca i32*
	store i32* %1, i32** %4
	%5 = load i32, i32* @_A
	%6 = add i32 %5, 5
	%7 = sub i32 %6, 6
	store i32 %7, i32* %3
	%8 = load i32*, i32** %4
	%9 = load i32, i32* @_A
	%10 = sub i32 %9, 6
	%11 = getelementptr i32, i32* %8, i32 %10
	store i32 46554646, i32* %11
	%12 = load i32, i32* %3
	%13 = icmp eq i32 %12, 5
	br i1 %13, label %14, label %15
14:
	br label %15
15:
	%16 = load i32, i32* %3
	%17 = icmp slt i32 %16, 10
	br i1 %17, label %18, label %19
18:
	store i32 1000, i32* %3
	br label %25
19:
	%20 = load i32*, i32** %4
	%21 = load i32, i32* @_A
	%22 = sub i32 %21, 5
	%23 = getelementptr i32, i32* %20, i32 %22
	%24 = load i32, i32* %23
	store i32 %24, i32* %3
	br label %25
25:
	ret i32 666
}
define dso_local void @func3([3 x i32]* %0) {
1:
	%2 = alloca [3 x i32]*
	store [3 x i32]* %0, [3 x i32]** %2
	%3 = alloca i32
	store i32 0, i32* %3
	%4 = load [3 x i32]*, [3 x i32]** %2
	%5 = load i32, i32* @_
	%6 = sub i32 %5, 12
	%7 = getelementptr [3 x i32], [3 x i32]* %4, i32 %6, i32 0
	%8 = load i32, i32* %7
	%9 = icmp sgt i32 %8, 10
	br i1 %9, label %10, label %11
10:
	ret void
11:
	br label %12
12:
	br label %13
13:
	%14 = load i32, i32* %3
	%15 = icmp slt i32 %14, 100
	br i1 %15, label %16, label %27
16:
	%17 = load i32, i32* %3
	%18 = icmp eq i32 %17, 50
	br i1 %18, label %19, label %22
19:
	%20 = load [3 x i32]*, [3 x i32]** %2
	%21 = getelementptr [3 x i32], [3 x i32]* %20, i32 0, i32 0
	store i32 1, i32* %21
	br label %27
22:
	%23 = load i32, i32* %3
	%24 = add i32 %23, 1
	store i32 %24, i32* %3
	br label %26
25:
	br label %26
26:
	br label %13
27:
	ret void
}
define dso_local i32 @func4(i32 %0, i32* %1, [3 x i32]* %2) {
3:
	%4 = alloca i32
	store i32 %0, i32* %4
	%5 = alloca i32*
	store i32* %1, i32** %5
	%6 = alloca [3 x i32]*
	store [3 x i32]* %2, [3 x i32]** %6
	%7 = load i32, i32* %4
	%8 = load i32*, i32** %5
	%9 = getelementptr i32, i32* %8, i32 0
	%10 = load i32, i32* %9
	%11 = load [3 x i32]*, [3 x i32]** %6
	%12 = getelementptr [3 x i32], [3 x i32]* %11, i32 0, i32 1
	%13 = load i32, i32* %12
	%14 = load i32, i32* %4
	%15 = load i32*, i32** %5
	%16 = getelementptr i32, i32* %15, i32 1
	%17 = load i32, i32* %16
	%18 = add i32 %14, %17
	%19 = load [3 x i32]*, [3 x i32]** %6
	%20 = getelementptr [3 x i32], [3 x i32]* %19, i32 0, i32 0
	%21 = load i32, i32* %20
	%22 = add i32 %18, %21
	%23 = load i32, i32* %4
	%24 = add i32 1, %23
	%25 = sub i32 0, %24
	%26 = load i32, i32* %4
	%27 = add i32 1, %26
	%28 = add i32 %27, 44
	%29 = add i32 1, 2
	%30 = add i32 %28, %29
	%31 = add i32 %25, %30
	%32 = mul i32 1, 5
	%33 = sdiv i32 %32, 4
	%34 = mul i32 5, 4
	%35 = srem i32 %34, 4
	%36 = sub i32 %33, %35
	%37 = load i32, i32* %4
	%38 = mul i32 6, %37
	%39 = mul i32 1, 6
	%40 = sdiv i32 8, 444
	%41 = add i32 %40, 6
	%42 = sdiv i32 55, 8
	%43 = mul i32 5, 9
	%44 = srem i32 9, 44
	ret i32 999
}
define dso_local i32 @func5() {
0:
	%1 = icmp eq i32 1, 2
	br i1 %1, label %8, label %2
2:
	%3 = load i32, i32* @_a
	%4 = icmp ne i32 2, %3
	br i1 %4, label %5, label %9
5:
	%6 = add i32 6666, 5
	%7 = icmp eq i32 %6, 4
	br i1 %7, label %8, label %9
8:
	ret i32 1111
9:
	%10 = icmp eq i32 0, 666
	%11 = load i32, i32* @_
	%12 = sub i32 0, %11
	%13 = zext i1 %10 to i32
	%14 = icmp ne i32 %13, %12
	br i1 %14, label %15, label %16
15:
	ret i32 5464
16:
	%17 = load i32, i32* @__
	%18 = getelementptr [2 x [12 x i32]], [2 x [12 x i32]]* @var_3, i32 0, i32 1, i32 1
	%19 = load i32, i32* %18
	%20 = mul i32 55, %19
	%21 = icmp sle i32 %17, %20
	br i1 %21, label %27, label %22
22:
	%23 = icmp sge i32 2, 54564
	br i1 %23, label %27, label %24
24:
	%25 = sub i32 1, 2
	%26 = icmp eq i32 %25, 6
	br i1 %26, label %27, label %28
27:
	ret i32 4564665
28:
	%29 = icmp ne i32 1, 0
	br i1 %29, label %37, label %30
30:
	%31 = load i32, i32* @varrrr_2
	%32 = add i32 2, %31
	%33 = icmp slt i32 1, %32
	br i1 %33, label %37, label %34
34:
	%35 = load i32, i32* @_a
	%36 = icmp sgt i32 8, %35
	br i1 %36, label %37, label %38
37:
	ret i32 5456
38:
	ret i32 55555
39:
	br label %40
40:
	br label %41
41:
	br label %42
42:
	%43 = sub i32 0, 555
	ret i32 %43
}
define dso_local i32 @main() {
0:
	%1 = load i32, i32* @_a
	%2 = mul i32 1, %1
	%3 = mul i32 2, 8
	%4 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @a_r__r, i32 0, i32 1, i32 1
	%5 = load i32, i32* %4
	%6 = sub i32 123, %5
	%7 = load i32, i32* @varrrr_1
	%8 = sdiv i32 5555, %7
	%9 = alloca [2 x [3 x i32]]
	%10 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %9, i32 0, i32 0, i32 0
	store i32 %2, i32* %10
	%11 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %9, i32 0, i32 0, i32 1
	store i32 %3, i32* %11
	%12 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %9, i32 0, i32 0, i32 2
	store i32 3, i32* %12
	%13 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %9, i32 0, i32 1, i32 0
	store i32 %6, i32* %13
	%14 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %9, i32 0, i32 1, i32 1
	store i32 %8, i32* %14
	%15 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %9, i32 0, i32 1, i32 2
	store i32 0, i32* %15
	%16 = sdiv i32 1, 2
	%17 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %9, i32 0, i32 0, i32 0
	%18 = load i32, i32* %17
	%19 = mul i32 6, %18
	%20 = mul i32 5, 8
	%21 = sdiv i32 %20, 4
	%22 = mul i32 %21, 5
	%23 = sub i32 22, %22
	%24 = srem i32 5, 4
	%25 = add i32 %23, %24
	%26 = alloca [4 x i32]
	%27 = getelementptr [4 x i32], [4 x i32]* %26, i32 0, i32 0
	store i32 %16, i32* %27
	%28 = getelementptr [4 x i32], [4 x i32]* %26, i32 0, i32 1
	store i32 %19, i32* %28
	%29 = getelementptr [4 x i32], [4 x i32]* %26, i32 0, i32 2
	store i32 5555, i32* %29
	%30 = getelementptr [4 x i32], [4 x i32]* %26, i32 0, i32 3
	store i32 %25, i32* %30
	%31 = alloca i32
	%32 = alloca i32
	%33 = call i32 @getint() 
	store i32 %33, i32* %31
	%34 = load i32, i32* @varr_2
	call void @func1(i32 %34)
	%35 = call i32 @getint() 
	%36 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %9, i32 0, i32 1, i32 2
	store i32 %35, i32* %36
	%37 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %9, i32 0, i32 1
	%38 = getelementptr [3 x i32], [3 x i32]* %37, i32 0, i32 0
	%39 = call i32 @func2(i32 111,i32* %38) 
	%40 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %9, i32 0, i32 0
	call void @func3([3 x i32]* %40)
	%41 = call i32 @getint() 
	%42 = getelementptr [4 x i32], [4 x i32]* %26, i32 0, i32 1
	store i32 %41, i32* %42
	%43 = load i32, i32* %31
	%44 = getelementptr [4 x i32], [4 x i32]* %26, i32 0, i32 0
	%45 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]* %9, i32 0, i32 0
	%46 = call i32 @func4(i32 %43,i32* %44,[3 x i32]* %45) 
	%47 = call i32 @func5() 
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	call void @putint(i32 1)
	call void @putch(i32 10)
	ret i32 0
}
