declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@fib_matrix = dso_local global [2 x [2 x i32]] [[2 x i32] [i32 1, i32 1], [2 x i32] [i32 1, i32 0]]
@__res = dso_local constant [2 x [2 x i32]] [[2 x i32] [i32 5, i32 5], [2 x i32] [i32 2, i32 3]]
@__useless = dso_local constant [4 x i32] [i32 1, i32 1, i32 1, i32 0]
define dso_local void @__vec_mul(i32* %0, [2 x i32]* %1, i32* %2) {
3:
	%4 = alloca i32*
	store i32* %0, i32** %4
	%5 = alloca [2 x i32]*
	store [2 x i32]* %1, [2 x i32]** %5
	%6 = alloca i32*
	store i32* %2, i32** %6
	%7 = load i32*, i32** %6
	%8 = getelementptr i32, i32* %7, i32 0
	%9 = load i32, i32* %8
	%10 = load [2 x i32]*, [2 x i32]** %5
	%11 = getelementptr [2 x i32], [2 x i32]* %10, i32 0, i32 0
	%12 = load i32, i32* %11
	%13 = mul i32 %9, %12
	%14 = load i32*, i32** %6
	%15 = getelementptr i32, i32* %14, i32 1
	%16 = load i32, i32* %15
	%17 = load [2 x i32]*, [2 x i32]** %5
	%18 = getelementptr [2 x i32], [2 x i32]* %17, i32 0, i32 1
	%19 = load i32, i32* %18
	%20 = mul i32 %16, %19
	%21 = add i32 %13, %20
	%22 = load i32*, i32** %4
	%23 = getelementptr i32, i32* %22, i32 0
	store i32 %21, i32* %23
	%24 = load i32*, i32** %6
	%25 = getelementptr i32, i32* %24, i32 0
	%26 = load i32, i32* %25
	%27 = load [2 x i32]*, [2 x i32]** %5
	%28 = getelementptr [2 x i32], [2 x i32]* %27, i32 1, i32 0
	%29 = load i32, i32* %28
	%30 = mul i32 %26, %29
	%31 = load i32*, i32** %6
	%32 = getelementptr i32, i32* %31, i32 1
	%33 = load i32, i32* %32
	%34 = load [2 x i32]*, [2 x i32]** %5
	%35 = getelementptr [2 x i32], [2 x i32]* %34, i32 1, i32 1
	%36 = load i32, i32* %35
	%37 = mul i32 %33, %36
	%38 = add i32 %30, %37
	%39 = load i32*, i32** %4
	%40 = getelementptr i32, i32* %39, i32 1
	store i32 %38, i32* %40
	ret void
}
define dso_local void @__mat_mul([2 x i32]* %0, [2 x i32]* %1, [2 x i32]* %2) {
3:
	%4 = alloca [2 x i32]*
	store [2 x i32]* %0, [2 x i32]** %4
	%5 = alloca [2 x i32]*
	store [2 x i32]* %1, [2 x i32]** %5
	%6 = alloca [2 x i32]*
	store [2 x i32]* %2, [2 x i32]** %6
	%7 = load [2 x i32]*, [2 x i32]** %5
	%8 = getelementptr [2 x i32], [2 x i32]* %7, i32 0, i32 0
	%9 = load i32, i32* %8
	%10 = load [2 x i32]*, [2 x i32]** %6
	%11 = getelementptr [2 x i32], [2 x i32]* %10, i32 0, i32 0
	%12 = load i32, i32* %11
	%13 = mul i32 %9, %12
	%14 = load [2 x i32]*, [2 x i32]** %5
	%15 = getelementptr [2 x i32], [2 x i32]* %14, i32 0, i32 1
	%16 = load i32, i32* %15
	%17 = load [2 x i32]*, [2 x i32]** %6
	%18 = getelementptr [2 x i32], [2 x i32]* %17, i32 1, i32 0
	%19 = load i32, i32* %18
	%20 = mul i32 %16, %19
	%21 = add i32 %13, %20
	%22 = load [2 x i32]*, [2 x i32]** %4
	%23 = getelementptr [2 x i32], [2 x i32]* %22, i32 0, i32 0
	store i32 %21, i32* %23
	%24 = load [2 x i32]*, [2 x i32]** %5
	%25 = getelementptr [2 x i32], [2 x i32]* %24, i32 0, i32 0
	%26 = load i32, i32* %25
	%27 = load [2 x i32]*, [2 x i32]** %6
	%28 = getelementptr [2 x i32], [2 x i32]* %27, i32 0, i32 1
	%29 = load i32, i32* %28
	%30 = mul i32 %26, %29
	%31 = load [2 x i32]*, [2 x i32]** %5
	%32 = getelementptr [2 x i32], [2 x i32]* %31, i32 0, i32 1
	%33 = load i32, i32* %32
	%34 = load [2 x i32]*, [2 x i32]** %6
	%35 = getelementptr [2 x i32], [2 x i32]* %34, i32 1, i32 1
	%36 = load i32, i32* %35
	%37 = mul i32 %33, %36
	%38 = add i32 %30, %37
	%39 = load [2 x i32]*, [2 x i32]** %4
	%40 = getelementptr [2 x i32], [2 x i32]* %39, i32 0, i32 1
	store i32 %38, i32* %40
	%41 = load [2 x i32]*, [2 x i32]** %5
	%42 = getelementptr [2 x i32], [2 x i32]* %41, i32 1, i32 0
	%43 = load i32, i32* %42
	%44 = load [2 x i32]*, [2 x i32]** %6
	%45 = getelementptr [2 x i32], [2 x i32]* %44, i32 0, i32 0
	%46 = load i32, i32* %45
	%47 = mul i32 %43, %46
	%48 = load [2 x i32]*, [2 x i32]** %5
	%49 = getelementptr [2 x i32], [2 x i32]* %48, i32 1, i32 1
	%50 = load i32, i32* %49
	%51 = load [2 x i32]*, [2 x i32]** %6
	%52 = getelementptr [2 x i32], [2 x i32]* %51, i32 1, i32 0
	%53 = load i32, i32* %52
	%54 = mul i32 %50, %53
	%55 = add i32 %47, %54
	%56 = load [2 x i32]*, [2 x i32]** %4
	%57 = getelementptr [2 x i32], [2 x i32]* %56, i32 1, i32 0
	store i32 %55, i32* %57
	%58 = load [2 x i32]*, [2 x i32]** %5
	%59 = getelementptr [2 x i32], [2 x i32]* %58, i32 1, i32 0
	%60 = load i32, i32* %59
	%61 = load [2 x i32]*, [2 x i32]** %6
	%62 = getelementptr [2 x i32], [2 x i32]* %61, i32 0, i32 1
	%63 = load i32, i32* %62
	%64 = mul i32 %60, %63
	%65 = load [2 x i32]*, [2 x i32]** %5
	%66 = getelementptr [2 x i32], [2 x i32]* %65, i32 1, i32 1
	%67 = load i32, i32* %66
	%68 = load [2 x i32]*, [2 x i32]** %6
	%69 = getelementptr [2 x i32], [2 x i32]* %68, i32 1, i32 1
	%70 = load i32, i32* %69
	%71 = mul i32 %67, %70
	%72 = add i32 %64, %71
	%73 = load [2 x i32]*, [2 x i32]** %4
	%74 = getelementptr [2 x i32], [2 x i32]* %73, i32 1, i32 1
	store i32 %72, i32* %74
	ret void
}
define dso_local i32 @__power(i32 %0, [2 x i32]* %1, [2 x i32]* %2) {
3:
	%4 = alloca i32
	store i32 %0, i32* %4
	%5 = alloca [2 x i32]*
	store [2 x i32]* %1, [2 x i32]** %5
	%6 = alloca [2 x i32]*
	store [2 x i32]* %2, [2 x i32]** %6
	%7 = load i32, i32* %4
	%8 = icmp eq i32 %7, 1
	br i1 %8, label %9, label %30
9:
	%10 = load [2 x i32]*, [2 x i32]** %5
	%11 = getelementptr [2 x i32], [2 x i32]* %10, i32 0, i32 0
	%12 = load i32, i32* %11
	%13 = load [2 x i32]*, [2 x i32]** %6
	%14 = getelementptr [2 x i32], [2 x i32]* %13, i32 0, i32 0
	store i32 %12, i32* %14
	%15 = load [2 x i32]*, [2 x i32]** %5
	%16 = getelementptr [2 x i32], [2 x i32]* %15, i32 0, i32 1
	%17 = load i32, i32* %16
	%18 = load [2 x i32]*, [2 x i32]** %6
	%19 = getelementptr [2 x i32], [2 x i32]* %18, i32 0, i32 1
	store i32 %17, i32* %19
	%20 = load [2 x i32]*, [2 x i32]** %5
	%21 = getelementptr [2 x i32], [2 x i32]* %20, i32 1, i32 0
	%22 = load i32, i32* %21
	%23 = load [2 x i32]*, [2 x i32]** %6
	%24 = getelementptr [2 x i32], [2 x i32]* %23, i32 1, i32 0
	store i32 %22, i32* %24
	%25 = load [2 x i32]*, [2 x i32]** %5
	%26 = getelementptr [2 x i32], [2 x i32]* %25, i32 1, i32 1
	%27 = load i32, i32* %26
	%28 = load [2 x i32]*, [2 x i32]** %6
	%29 = getelementptr [2 x i32], [2 x i32]* %28, i32 1, i32 1
	store i32 %27, i32* %29
	ret i32 0
30:
	%31 = load [2 x i32]*, [2 x i32]** %6
	%32 = load [2 x i32]*, [2 x i32]** %5
	%33 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @fib_matrix, i32 0, i32 0
	call void @__mat_mul([2 x i32]* %31,[2 x i32]* %32,[2 x i32]* %33)
	%34 = load [2 x i32]*, [2 x i32]** %6
	%35 = getelementptr [2 x i32], [2 x i32]* %34, i32 0, i32 0
	%36 = load i32, i32* %35
	%37 = load [2 x i32]*, [2 x i32]** %5
	%38 = getelementptr [2 x i32], [2 x i32]* %37, i32 0, i32 0
	store i32 %36, i32* %38
	%39 = load [2 x i32]*, [2 x i32]** %6
	%40 = getelementptr [2 x i32], [2 x i32]* %39, i32 0, i32 1
	%41 = load i32, i32* %40
	%42 = load [2 x i32]*, [2 x i32]** %5
	%43 = getelementptr [2 x i32], [2 x i32]* %42, i32 0, i32 1
	store i32 %41, i32* %43
	%44 = load [2 x i32]*, [2 x i32]** %6
	%45 = getelementptr [2 x i32], [2 x i32]* %44, i32 1, i32 0
	%46 = load i32, i32* %45
	%47 = load [2 x i32]*, [2 x i32]** %5
	%48 = getelementptr [2 x i32], [2 x i32]* %47, i32 1, i32 0
	store i32 %46, i32* %48
	%49 = load [2 x i32]*, [2 x i32]** %6
	%50 = getelementptr [2 x i32], [2 x i32]* %49, i32 1, i32 1
	%51 = load i32, i32* %50
	%52 = load [2 x i32]*, [2 x i32]** %5
	%53 = getelementptr [2 x i32], [2 x i32]* %52, i32 1, i32 1
	store i32 %51, i32* %53
	%54 = load i32, i32* %4
	%55 = sub i32 %54, 1
	%56 = load [2 x i32]*, [2 x i32]** %5
	%57 = load [2 x i32]*, [2 x i32]** %6
	%58 = call i32 @__power(i32 %55,[2 x i32]* %56,[2 x i32]* %57) 
	ret i32 %58
59:
	ret i32 0
}
define dso_local i32 @power(i32 %0, [2 x i32]* %1) {
2:
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca [2 x i32]*
	store [2 x i32]* %1, [2 x i32]** %4
	%5 = load i32, i32* %3
	%6 = icmp sle i32 %5, 0
	br i1 %6, label %7, label %9
7:
	%8 = sub i32 0, 1
	ret i32 %8
9:
	%10 = alloca [2 x [2 x i32]]
	%11 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %10, i32 0, i32 0, i32 0
	store i32 1, i32* %11
	%12 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %10, i32 0, i32 0, i32 1
	store i32 1, i32* %12
	%13 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %10, i32 0, i32 1, i32 0
	store i32 1, i32* %13
	%14 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %10, i32 0, i32 1, i32 1
	store i32 0, i32* %14
	%15 = load i32, i32* %3
	%16 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %10, i32 0, i32 0
	%17 = load [2 x i32]*, [2 x i32]** %4
	%18 = call i32 @__power(i32 %15,[2 x i32]* %16,[2 x i32]* %17) 
	ret i32 %18
}
define dso_local i32 @error() {
0:
	call void @putch(i32 69)
	call void @putch(i32 114)
	call void @putch(i32 114)
	call void @putch(i32 111)
	call void @putch(i32 114)
	call void @putch(i32 33)
	call void @putch(i32 10)
	ret i32 1
}
define dso_local i32 @out([2 x i32]* %0) {
1:
	%2 = alloca [2 x i32]*
	store [2 x i32]* %0, [2 x i32]** %2
	%3 = load [2 x i32]*, [2 x i32]** %2
	%4 = getelementptr [2 x i32], [2 x i32]* %3, i32 0, i32 0
	%5 = load i32, i32* %4
	call void @putint(i32 %5)
	call void @putch(i32 32)
	%6 = load [2 x i32]*, [2 x i32]** %2
	%7 = getelementptr [2 x i32], [2 x i32]* %6, i32 0, i32 1
	%8 = load i32, i32* %7
	call void @putint(i32 %8)
	call void @putch(i32 10)
	%9 = load [2 x i32]*, [2 x i32]** %2
	%10 = getelementptr [2 x i32], [2 x i32]* %9, i32 1, i32 0
	%11 = load i32, i32* %10
	call void @putint(i32 %11)
	call void @putch(i32 32)
	%12 = load [2 x i32]*, [2 x i32]** %2
	%13 = getelementptr [2 x i32], [2 x i32]* %12, i32 1, i32 1
	%14 = load i32, i32* %13
	call void @putint(i32 %14)
	call void @putch(i32 10)
	ret i32 1
}
define dso_local i32 @main() {
0:
	%1 = sdiv i32 0, 10078
	%2 = mul i32 0, 45
	%3 = add i32 %1, %2
	%4 = alloca i32
	store i32 %3, i32* %4
	%5 = alloca i32
	%6 = call i32 @getint() 
	store i32 %6, i32* %5
	%7 = alloca [2 x i32]
	%8 = getelementptr [2 x i32], [2 x i32]* %7, i32 0, i32 0
	store i32 0, i32* %8
	%9 = getelementptr [2 x i32], [2 x i32]* %7, i32 0, i32 1
	store i32 0, i32* %9
	%10 = alloca [2 x [2 x i32]]
	%11 = sub i32 0, 1
	%12 = alloca [6 x [2 x i32]]
	%13 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %12, i32 0, i32 0, i32 0
	store i32 1, i32* %13
	%14 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %12, i32 0, i32 0, i32 1
	store i32 0, i32* %14
	%15 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %12, i32 0, i32 1, i32 0
	store i32 1, i32* %15
	%16 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %12, i32 0, i32 1, i32 1
	store i32 1, i32* %16
	%17 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %12, i32 0, i32 2, i32 0
	store i32 2, i32* %17
	%18 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %12, i32 0, i32 2, i32 1
	store i32 1, i32* %18
	%19 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %12, i32 0, i32 3, i32 0
	store i32 3, i32* %19
	%20 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %12, i32 0, i32 3, i32 1
	store i32 1, i32* %20
	%21 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %12, i32 0, i32 4, i32 0
	store i32 4, i32* %21
	%22 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %12, i32 0, i32 4, i32 1
	store i32 3, i32* %22
	%23 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %12, i32 0, i32 5, i32 0
	store i32 %11, i32* %23
	%24 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %12, i32 0, i32 5, i32 1
	store i32 1, i32* %24
	call void @putch(i32 97)
	call void @putch(i32 91)
	call void @putch(i32 110)
	call void @putch(i32 93)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 91)
	call void @putch(i32 110)
	call void @putch(i32 32)
	call void @putch(i32 45)
	call void @putch(i32 32)
	call void @putch(i32 49)
	call void @putch(i32 93)
	call void @putch(i32 32)
	call void @putch(i32 43)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 91)
	call void @putch(i32 110)
	call void @putch(i32 32)
	call void @putch(i32 45)
	call void @putch(i32 32)
	call void @putch(i32 50)
	call void @putch(i32 93)
	call void @putch(i32 32)
	call void @putch(i32 40)
	call void @putch(i32 102)
	call void @putch(i32 111)
	call void @putch(i32 114)
	call void @putch(i32 32)
	call void @putch(i32 100)
	call void @putch(i32 105)
	call void @putch(i32 102)
	call void @putch(i32 102)
	call void @putch(i32 101)
	call void @putch(i32 114)
	call void @putch(i32 101)
	call void @putch(i32 110)
	call void @putch(i32 116)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 110)
	call void @putch(i32 105)
	call void @putch(i32 116)
	call void @putch(i32 32)
	call void @putch(i32 118)
	call void @putch(i32 97)
	call void @putch(i32 108)
	call void @putch(i32 117)
	call void @putch(i32 101)
	call void @putch(i32 115)
	call void @putch(i32 41)
	call void @putch(i32 10)
	br label %25
25:
	%26 = load i32, i32* %5
	%27 = load i32, i32* %4
	%28 = icmp sgt i32 %26, %27
	br i1 %28, label %29, label %90
29:
	%30 = alloca i32
	%31 = call i32 @getint() 
	store i32 %31, i32* %30
	%32 = load i32, i32* %30
	%33 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %10, i32 0, i32 0
	%34 = call i32 @power(i32 %32,[2 x i32]* %33) 
	%35 = alloca i32
	store i32 %34, i32* %35
	call void @putch(i32 47)
	call void @putch(i32 42)
	call void @putch(i32 32)
	call void @putch(i32 105)
	call void @putch(i32 110)
	call void @putch(i32 112)
	call void @putch(i32 117)
	call void @putch(i32 116)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)
	%36 = load i32, i32* %30
	call void @putint(i32 %36)
	call void @putch(i32 32)
	call void @putch(i32 42)
	call void @putch(i32 47)
	call void @putch(i32 10)
	%37 = load i32, i32* %35
	%38 = icmp ne i32 %37, 0
	br i1 %38, label %39, label %45
39:
	%40 = call i32 @error() 
	%41 = icmp ne i32 %40, 0
	br i1 %41, label %42, label %45
42:
	%43 = load i32, i32* %5
	%44 = sub i32 %43, 1
	store i32 %44, i32* %5
	br label %89
45:
	%46 = load i32, i32* %35
	%47 = icmp ne i32 %46, 0
	br i1 %47, label %52, label %48
48:
	%49 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %10, i32 0, i32 0
	%50 = call i32 @out([2 x i32]* %49) 
	%51 = icmp ne i32 %50, 0
	br i1 %51, label %52, label %83
52:
	%53 = alloca i32
	store i32 0, i32* %53
	br label %54
54:
	%55 = load i32, i32* %53
	%56 = icmp slt i32 %55, 6
	br i1 %56, label %59, label %57
57:
	%58 = icmp ne i32 1, 0
	br i1 %58, label %59, label %82
59:
	%60 = getelementptr [2 x i32], [2 x i32]* %7, i32 0, i32 0
	%61 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %10, i32 0, i32 0
	%62 = load i32, i32* %53
	%63 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %12, i32 0, i32 %62
	%64 = getelementptr [2 x i32], [2 x i32]* %63, i32 0, i32 0
	call void @__vec_mul(i32* %60,[2 x i32]* %61,i32* %64)
	call void @putch(i32 119)
	call void @putch(i32 104)
	call void @putch(i32 101)
	call void @putch(i32 110)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 91)
	call void @putch(i32 48)
	call void @putch(i32 93)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)
	%65 = load i32, i32* %53
	%66 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %12, i32 0, i32 %65, i32 1
	%67 = load i32, i32* %66
	call void @putint(i32 %67)
	call void @putch(i32 44)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 91)
	call void @putch(i32 49)
	call void @putch(i32 93)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)
	%68 = load i32, i32* %53
	%69 = getelementptr [6 x [2 x i32]], [6 x [2 x i32]]* %12, i32 0, i32 %68, i32 0
	%70 = load i32, i32* %69
	call void @putint(i32 %70)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 61)
	call void @putch(i32 62)
	call void @putch(i32 32)
	call void @putch(i32 97)
	call void @putch(i32 91)
	%71 = load i32, i32* %30
	call void @putint(i32 %71)
	call void @putch(i32 93)
	call void @putch(i32 32)
	call void @putch(i32 61)
	call void @putch(i32 32)
	%72 = getelementptr [2 x i32], [2 x i32]* %7, i32 0, i32 1
	%73 = load i32, i32* %72
	call void @putint(i32 %73)
	call void @putch(i32 10)
	%74 = load i32, i32* %53
	%75 = add i32 %74, 1
	store i32 %75, i32* %53
	%76 = load i32, i32* %53
	%77 = icmp sge i32 %76, 6
	br i1 %77, label %78, label %79
78:
	br label %82
79:
	br label %81
80:
	br label %81
81:
	br label %54
82:
	br label %83
83:
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 47)
	call void @putch(i32 10)
	%84 = load i32, i32* %5
	%85 = sub i32 1, %84
	%86 = sub i32 0, %85
	%87 = sub i32 0, %86
	%88 = sub i32 0, %87
	store i32 %88, i32* %5
	br label %89
89:
	br label %25
90:
	call void @putch(i32 47)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 32)
	call void @putch(i32 69)
	call void @putch(i32 78)
	call void @putch(i32 68)
	call void @putch(i32 32)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 42)
	call void @putch(i32 47)
	call void @putch(i32 10)
	ret i32 0
}
